<!DOCTYPE html>
<html lang="en">

<head>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <title>Life of a Transaction · Libra</title>
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content="Docusaurus" />
  <meta name="description"
    content="To get a deeper understanding of the lifecycle of a Libra transaction, we will follow a transaction on its journey from being submitted to a Libra validator to being committed to the Libra Blockchain. We will then “zoom-in” on each logical component of a validator and take a look at its interactions with other components." />
  <meta name="docsearch:language" content="en" />
  <meta property="og:title" content="Life of a Transaction · Libra" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://developers.libra.org/" />
  <meta property="og:description"
    content="To get a deeper understanding of the lifecycle of a Libra transaction, we will follow a transaction on its journey from being submitted to a Libra validator to being committed to the Libra Blockchain. We will then “zoom-in” on each logical component of a validator and take a look at its interactions with other components." />
  <meta property="og:image" content="https://developers.libra.org/img/libra.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:image" content="https://developers.libra.org/img/libra.png" />
  <link rel="shortcut icon" href="libra.ico" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css" />
  <link rel="alternate" type="application/atom+xml" href="atom.xml" title="Libra Blog ATOM Feed" />
  <link rel="alternate" type="application/rss+xml" href="feed.xml" title="Libra Blog RSS Feed" />
  <script type="text/javascript" src="buttons.js"></script>
  <script type="text/javascript" src="code_block_buttons.js"></script>
  <script type="text/javascript" src="cookie_banner.js"></script>
  <script type="text/javascript" src="disable_adblock.js"></script>
  <script type="text/javascript" src="segment.analytics.min.js"></script>
  <script type="text/javascript" src="segment.js"></script>
  <script type="text/javascript" src="clipboardjs.2.0.0.min.js"></script>
  <script type="text/javascript" src="forms.js"></script>
  <script src="scrollSpy.js"></script>
  <link rel="stylesheet" href="main.css" />
  <script src="codetabs.js"></script>
</head>

<body class="sideNavVisible separateOnPageNav">
  <div class="fixedHeaderContainer">
    <div class="headerWrapper wrapper">
      <header><a href="https://developers.libra.org/"><img class="logo" src="libra-nav-logo.png" alt="Libra" />
          <h2 class="headerTitleWithLogo">Libra</h2>
        </a>
        <div class="navigationWrapper navigationSlider">
          <nav class="slidingNav">
            <ul class="nav-site nav-site-internal">
              <li class=""><a href="https://violas.io/">主页</a></li>
              <li class="siteNavGroupActive"><a href="welcome-to-libra.htm" target="_self">文档</a></li>
              <li class=""><a href="https://community.libra.org" target="_self">Libra 社区</a></li>
              <li class=""><a href="blog_2.html" target="_self">Libra Blog</a></li>
              <li class=""><a href="https://libra.org" target="_self">libra 官网</a></li>
              <li class=""><a href="https://github.com/libra/libra" target="_self">Libra GitHub</a></li>
              <li class=""><a href="../lib_doc_en/life-of-a-transaction.htm" target="_self">中/EN</a></li>
              <li class="navSearchWrapper reactNavSearchWrapper"><input type="text" id="search_input_react"
                  placeholder="Search" title="Search" /></li>
            </ul>
          </nav>
        </div>
      </header>
    </div>
  </div>
  <div class="navPusher">
    <div class="docMainWrapper wrapper">
      <div class="docsNavContainer" id="docsNav">
        <nav class="toc">
          <div class="toggleNav">
            <section class="navWrapper wrapper">
              <div class="navBreadcrumb wrapper">
                <div class="navToggle" id="navToggler">
                  <div class="hamburger-menu">
                    <div class="line1"></div>
                    <div class="line2"></div>
                    <div class="line3"></div>
                  </div>
                </div>
                <h2><i>›</i><span>学习 Libra</span></h2>
                <div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div>
              </div>
              <div class="navGroups">
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习 Libra</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="welcome-to-libra.htm">欢迎</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="libra-protocol.htm">Libra 协议: 核心概念</a></li>
                    <li class="navListItem navListItemActive"><a class="navItem"
                        href="life-of-a-transaction.htm">交易的生命周期</a></li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">技术论文</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="the-libra-blockchain-paper.htm">Libra 区块链</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="move-paper.htm">Move: 一种可编程资源的语言</a></li>
                        <li class="navListItem"><a class="navItem"
                            href="state-machine-replication-paper.htm">Libra区块链中状态机的复制</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习Libra核心</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="my-first-transaction.htm">我的第一笔交易</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="move-overview.htm">Move概述</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="run-local-network.htm">在本地网络上运行</a></li>
                    <li class="navListItem"><a class="navItem" href="run-move-locally.htm">本地运行Move程序</a>
                    </li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">社区</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-open-source-paper.htm">Libra开源</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="contributing.htm">贡献指南</a></li>
                    <li class="navListItem"><a class="navItem" href="coding-guidelines.htm">代码指南</a></li>
                    <li class="navListItem"><a class="navItem" href="security.htm">报告漏洞</a></li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Libra 协议实现</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-core-overview.htm">Libra Core概述</a>
                    </li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">READMEs</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="admission-control.htm">准入控制 admission
                            control</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="bytecode-verifier.htm">字节码验证器 Bytecode
                            Verifier</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="consensus.htm">共识组件 Consensus</a></li>
                        <li class="navListItem"><a class="navItem" href="crypto.htm">加密组件 Crypto</a></li>
                        <li class="navListItem"><a class="navItem" href="execution.htm">执行组件 Execution</a></li>
                        <li class="navListItem"><a class="navItem" href="mempool.htm">内存池 Mempool</a></li>
                        <li class="navListItem"><a class="navItem" href="ir-to-bytecode.htm">Move IR 编译器</a></li>
                        <li class="navListItem"><a class="navItem" href="move-language.htm">Move 语言</a></li>
                        <li class="navListItem"><a class="navItem" href="network.htm">网络组件 Network</a></li>
                        <li class="navListItem"><a class="navItem" href="storage.htm">存储组件 Storage</a></li>
                        <li class="navListItem"><a class="navItem" href="vm.htm">虚拟机 Virtual Machine</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">参考引用</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-cli.htm">Libra命令行工具</a></li>
                    <li class="navListItem"><a class="navItem" href="glossary.htm">词汇表</a></li>
                  </ul>
                </div>
              </div>
            </section>
          </div>
          <script>
            var coll = document.getElementsByClassName('collapsible');
            var checkActiveCategory = true;
            for (var i = 0; i < coll.length; i++) {
              var links = coll[i].nextElementSibling.getElementsByTagName('*');
              if (checkActiveCategory) {
                for (var j = 0; j < links.length; j++) {
                  if (links[j].classList.contains('navListItemActive')) {
                    coll[i].nextElementSibling.classList.toggle('hide');
                    coll[i].childNodes[1].classList.toggle('rotate');
                    checkActiveCategory = false;
                    break;
                  }
                }
              }

              coll[i].addEventListener('click', function () {
                var arrow = this.childNodes[1];
                arrow.classList.toggle('rotate');
                var content = this.nextElementSibling;
                content.classList.toggle('hide');
              });
            }

            document.addEventListener('DOMContentLoaded', function () {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              var headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function (event) {
                var el = event.target;
                while (el !== headings) {
                  if (el.tagName === 'A') {
                    document.body.classList.remove('tocActive');
                    break;
                  } else {
                    el = el.parentNode;
                  }
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function (event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
          </script>
        </nav>
      </div>
      <div class="container mainContainer">
        <div class="wrapper">
          <div class="post">
            <header class="postHeader"><a class="edit-page-link button"
                href="https://github.com/lbc-team/libra-docs/edit/lbc/docs/life-of-a-transaction.md" target="_blank"
                rel="noreferrer noopener">编辑</a>
              <h1 class="postHeaderTitle">交易的生命周期</h1>
            </header>
            <article>
              <div><span>
                  <p>
                    为了更深入的了解Libra交易的生命周期，我们将跟踪一笔交易，从提交到Libra验证器，到使用Libra区块链处理确认交易的整个过程。然后，我们将“放大”来看验证器的每个逻辑组件及与其他组件之间的交互。
                  </p>
                  <h2><a class="anchor" aria-hidden="true" id="客户提交交易"></a><a href="#客户提交交易" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>客户提交交易</h2>
                  <p>由Libra 客户端构造一个<strong>原始的交易</strong>（就称它为T<sub>5</sub>raw）将10个Libra Coin从 Alice
                    账户转移到 Bob 账户。原始交易包含以下字段，每个字段都和词汇表定义加上了超链接关联。</p>
                  <ul>
                    <li>Alice的<a href="glossary.htm#账户地址">账户地址</a>.
                    </li>
                    <li>一段代表 Alice 要执行操作的程序，包含如下:
                      <ul>
                        <li>Move语言<a href="glossary.htm#交易脚本">点对点字节码交易脚本</a>.
                        </li>
                        <li>脚本输入参数列表 (例如，Bob的帐户地址和付款金额).</li>
                      </ul>
                    </li>
                    <li><a href="glossary.htm#gas价格">Gas价格</a> (以
                      microlibra/gas 为单位) — 发送方执行交易时需要为每单位<a
                        href="glossary.htm#gas">gas</a>支付的价格。
                      Gas是支付的是在区块链上计算和存储的费用。Gas是一个计算量的抽象，没有具体固定的真实价值。</li>
                    <li>Alice愿意为此次交易支付的<a href="glossary.htm#最大gas量">最大Gas量</a>
                      。</li>
                    <li>交易的<a href="glossary.htm#到期时间">到期时间</a> 。
                    </li>
                    <li><a href="glossary.htm#序列号">序列号</a> — 5
                      <ul>
                        <li>序号为5的交易只有在帐户有5个交易是才能应用（发出交易）。</li>
                      </ul>
                    </li>
                  </ul>
                  <p>客户端使用Alice的私钥对交易T<sub>5</sub>raw<strong>进行签名</strong>。签名后的交易T5包括以下内容：</p>
                  <ul>
                    <li>原始交易。</li>
                    <li>Alice的公钥</li>
                    <li>Alice的数字签名</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="交易前的假设"></a><a href="#交易前的假设" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>交易前的假设</h3>
                  <p>为了描述交易 T<sub>5</sub> 的生命周期，我们假设：</p>
                  <ul>
                    <li>Alice和Bob在Libra区块链上有<a href="glossary.htm#账户">账户</a> .</li>
                    <li>Alice的账户中有110个 Libra 币。</li>
                    <li>Alice的帐户的当前<a href="glossary.htm#序列号">序列号</a>
                      是5（表示已经从Alice的帐户发送了5个交易）。</li>
                    <li>网络上总共有100个验证器 — 网络上的 V<sub>1</sub> 到 V<sub>100</sub> 。</li>
                    <li>客户端将交易 T<sub>5</sub> 提交给验证器 V<sub>1</sub></li>
                    <li><strong>验证器 V<sub>1</sub> 本轮（共识）的提议者/领导者。</strong></li>
                  </ul>
                  <h2><a class="anchor" aria-hidden="true" id="交易的生命周期"></a><a href="#交易的生命周期" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>交易的生命周期</h2>
                  <p>在本节中，我们将描述交易T<sub>5</sub>的生命周期，从客户端提交开始到交易在Libra区块链确认。</p>
                  <p>根据相关度和在交易生命周期中步骤的编号，我们提供链接进一步说明验证器节点及其相应组件之间的交互，熟悉了交易的生命周期中所有的步骤后，你可以进一步阅读每个步骤中相应组件之间的交互信息的链接。
                  </p>
                  <blockquote class="block_note">
                    <p><strong>注意:</strong> 本文档中所有图形中的箭头启动源自（哪一个）交互/操作的组件，并终止于（哪一个）正在执行操作的组件。
                      箭头不<strong>表示</strong>读取，写入或返回的数据。</p>
                  </blockquote>
                  <p><img src="validator-sequence.svg" alt="交易生命周期">
                    <small class="figure">图1.1交易生命周期</small></p>
                  <h3><a class="anchor" aria-hidden="true" id="接收交易"></a><a href="#接收交易" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>接收交易</h3>
                  <p><strong>1</strong> — 客户端将交易 T<sub>5</sub> 提交给验证器 V<sub>1</sub>
                    ，验证器V1的准入控制（AC）组件接收该交易。 (客户端 → AC <a href="#客户端-ac-ac1">AC.1</a>)</p>
                  <p><strong>2</strong> — AC将使用虚拟机（VM）组件执行验证检查，例如签名验证，检查Alice的帐户是否有足够的余额，检查交易
                    T<sub>5</sub> 是否未被重复广播等。(AC → 虚拟机 <a href="#ac-虚拟机-ac2">AC.2</a>, <a href="#ac-虚拟机-vm1">VM.1</a>)
                  </p>
                  <p><strong>3</strong> — 当 T<sub>5</sub> 通过验证检查时，AC将 T<sub>5</sub>
                    发送到V<sub>1</sub>的内存池。(AC → 存池 <a href="#ac-内存池-ac3">AC.3</a>, <a href="#ac-内存池-mp1">MP.1</a>)</p>
                  <h3><a class="anchor" aria-hidden="true" id="发布交易至其他验证器节点"></a><a href="#发布交易至其他验证器节点"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>发布交易至其他验证器节点</h3>
                  <p><strong>4</strong> — 内存池将 T<sub>5</sub> 保存在内存缓冲区中。 内存池可能已包含从Alice的地址发送的多个交易。</p>
                  <p><strong>5</strong> — 使用shared-内存池协议，V<sub>1</sub>
                    将共享其内存池中的所有交易（包括T<sub>5</sub>）给其他验证器（V2到V100）广播交易，并将从其他验证器接收的交易放入其自己的内存池中。(内存池 →
                    其他验证器 <a href="#内存池-其他验证器-mp2">MP.2</a>)</p>
                  <h3><a class="anchor" aria-hidden="true" id="块提议"></a><a href="#块提议" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>块提议</h3>
                  <p><strong>6</strong> — 由于验证器 V<sub>1</sub>
                    是提议者/领导者，它将从其内存池中提取一个交易块，并通过其共识组件将此块作为提议复制到其他验证器。(共识 → 内存池 <a href="#共识-内存池-mp3">MP.3</a>, <a
                      href="#共识-内存池-co1">CO.1</a>)</p>
                  <p><strong>7</strong> — V<sub>1</sub> 的共识模块负责在所有验证器之间协调提议块中交易的顺序。 (共识 → 其他验证者 <a
                      href="#共识-其他验证器-co2">CO.2</a>)。 有关我们提出的共识协议LibraBFT的详细信息，请参阅我们的<a
                      href="state-machine-replication-paper.htm">Libra区块链中的状态机复制</a>
                    技术论文。</p>
                  <h3><a class="anchor" aria-hidden="true" id="区块执行和达成共识"></a><a href="#区块执行和达成共识" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>区块执行和达成共识</h3>
                  <p><strong>8</strong> — 作为达成协议的一部分，交易块（包含 T<sub>5</sub> ）被传递给执行组件。 (共识 → 执行 <a
                      href="#共识-执行-共识-其他验证器-co3">CO.3</a>, <a href="#共识-执行-ex1">EX.1</a>)</p>
                  <p><strong>9</strong> — 执行组件在虚拟机（VM）中管理交易的执行。 请注意，在块中的事务已经达成一致之前，这种执行是按推测进行的。 (执行 →
                    VM <a href="#执行-虚拟机-ex2">EX.2</a>, <a href="#执行-虚拟机-vm3">VM.3</a>)</p>
                  <p><strong>10</strong> — 在执行块中的交易之后，执行组件将块中的交易（包括 T<sub>5</sub> ）附加到<a
                      href="#merkle-accumulators">Merkle累加器</a>（分布式历史账本）。这是Merkle累加器的内存/临时版本。
                    这些交易（建议/推测）的结果会返回到共识组件。 (共识 → 执行 <a href="#共识-执行-共识-其他验证器-co3">CO.3</a>, <a
                      href="#共识-执行-ex1">EX.1</a>). 从“共识”到“执行”的箭头表示执行交易的请求是由共识组件发出的。
                    （本文档为了箭头使用含义一致，因此不使用箭头来表示数据流）。</p>
                  <p><strong>11</strong> — （共识领导者）试图与参与共识的其他验证者就该块的执行结果达成共识。 (共识 → 其他验证者 <a
                      href="#共识-执行-共识-其他验证器-co3">CO.3</a>)</p>
                  <h3><a class="anchor" aria-hidden="true" id="区块提交"></a><a href="#区块提交" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>区块提交</h3>
                  <p><strong>12</strong> — 如果块的执行结果由一组具有超过多数票数的验证器达成一致后并签名了，则验证器 V<sub>1</sub>
                    的执行组件从高速缓存中读取块执行的结果并提交块中的所有交易至持久存储。 (共识 → 执行 <a href="#共识-执行-co4">CO.4</a>, <a
                      href="#共识-执行-ex3">EX.3</a>), (执行 → 存储 <a href="#执行-存储-ex4">EX.4</a>, <a
                      href="#执行-存储-st3">ST.3</a>)</p>
                  <p><strong>13</strong> — Alice的账号现在有100个Libra 币，其序列号为6. 如果 T<sub>5</sub>
                    由Bob重放，它将被拒绝，因为Alice的账号（6）的序列号大于重放的交易的序列号（5）。</p>
                  <h2><a class="anchor" aria-hidden="true" id="验证器组件交互"></a><a href="#验证器组件交互" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>验证器组件交互</h2>
                  <p>在<a
                      href="#lifecycle-of-the-transaction">上一节</a>，我们描述了一个交易从提交到在区块链中确认的一个典型交易生命周期过程。现在让我们更深入的了解验证器组件之间的交互，验证器如何处理交易并响应查询。相信这些信息对以下人员更有用:
                  </p>
                  <ul>
                    <li>想要全面了解系统底层如何工作。</li>
                    <li>有兴趣为Libra Core软件做出贡献。</li>
                  </ul>
                  <p>为了叙述方便，我们假设客户端将交易 T<sub>N</sub> 提交给验证器 V<sub>X</sub>。
                    对于每个验证器组件，我们将在相应组件（章节）下描述其每个组件之间交互。 请注意，描述组件间交互的子部分未严格按其执行顺序列出。
                    大多数交互与交易的处理相关，少数与客户端读取查询相关（查询区块链上的已知信息）。</p>
                  <p>让我们看一下验证器节点的核心逻辑组件:</p>
                  <ul>
                    <li><a href="#准入控制-ac">准入控制</a></li>
                    <li><a href="#内存池">内存池</a></li>
                    <li><a href="#共识">共识</a></li>
                    <li><a href="#执行">执行</a></li>
                    <li><a href="#虚拟机-vm">虚拟机</a></li>
                    <li><a href="#存储">存储</a></li>
                  </ul>
                  <p>在每个部分的末尾，我们提供了<a href="libra-core-overview.htm">Libra Core</a>
                    中相应说明链接</p>
                  <h2><a class="anchor" aria-hidden="true" id="准入控制-ac"></a><a href="#准入控制-ac" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>准入控制 (AC)</h2>
                  <p><img src="admission-control.svg" alt="图 1.2 准入控制">
                    <small class="figure">图 1.2 准入控制</small></p>
                  <p>准入控制组件是验证器的<em>唯一外部接口</em>。 客户端向验证器发出的任何请求都会先转到AC。</p>
                  <h3><a class="anchor" aria-hidden="true" id="客户端-ac-ac1"></a><a href="#客户端-ac-ac1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>客户端 → AC (AC.1)</h3>
                  <p>客户端将交易 V<sub>X</sub> 提交给验证器的准入控制组件。 这通过 <code>AC::SubmitTransaction()</code> 来完成
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="ac-虚拟机-ac2"></a><a href="#ac-虚拟机-ac2" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 虚拟机 (AC.2)</h3>
                  <p>准入控制访问验证器的虚拟机（VM）并对交易初步检查，以便尽早拒绝格式错误的交易。 这通过
                    <a href="#virtual-machine-b"><code>VM::ValidateTransaction()</code></a> 来完成 。
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="ac-内存池-ac3"></a><a href="#ac-内存池-ac3" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 内存池 (AC.3)</h3>
                  <p>一旦 <code>VM::ValidateTransaction()</code> 没有返回错误, AC通过
                    <code>Mempool::AddTransactionWithValidation().</code> 将交易转发到验证器 V<sub>X</sub>
                    的内存池。 只有当 T<sub>N</sub> 的序列号大于或等于发送者帐户的当前序列号时，验证器 V<sub>X</sub> 的内存池才会接受来自AC的交易
                    T<sub>N</sub> （请注意，除非交易序号是下一个序列号，否则交易无法达成共识）</p>
                  <h3><a class="anchor" aria-hidden="true" id="ac-存储-ac4"></a><a href="#ac-存储-ac4" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 存储 (AC.4)</h3>
                  <p>当客户端对Libra区块链执行查询时（例如，为了获得Alice帐户的余额），AC直接与存储组件交互以获取所请求的信息。</p>
                  <h3><a class="anchor" aria-hidden="true" id="准入控制文档"></a><a href="#准入控制文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>准入控制文档</h3>
                  <p>有关实现细节，请参阅<a href="admission-control.htm">准入控制文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="虚拟机-vm"></a><a href="#虚拟机-vm" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>虚拟机 (VM)</h2>
                  <p><img src="virtual-machine.svg" alt="图 1.3 虚拟机">
                    <small class="figure">图 1.3 虚拟机 </small></p>
                  <p><a href="move-overview.htm">Move 虚拟机</a> (VM) 验证并执行Move字节码编写的交易脚本。
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="ac-虚拟机-vm1"></a><a href="#ac-虚拟机-vm1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 虚拟机 (VM.1)</h3>
                  <p>当验证器 V<sub>X</sub> 的准入控制模块从客户端接收到交易时，它会调用VM上的
                    <code>VM::ValidateTransaction()</code> 来验证交易。</p>
                  <h3><a class="anchor" aria-hidden="true" id="虚拟机-存储-vm2"></a><a href="#虚拟机-存储-vm2" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>虚拟机 → 存储 (VM.2)</h3>
                  <p>当AC或内存池通过 <code>VM::ValidateTransaction()</code>
                    请求虚拟机验证交易时，虚拟机从存储加载交易发送者的帐户并执行以下验证：</p>
                  <ul>
                    <li>检查交易中的签名是否正确（如发现错误签名的交易则拒绝）</li>
                    <li>检查发送人的帐户身份验证key是否与其公钥（对应签署交易私钥）的哈希相同。</li>
                    <li>验证交易的序列号是否不小于发件人帐户的当前序列号。 执行此检查可防止针对发件人帐户重放交易。</li>
                    <li>验证签名交易中的程序代码有没有格式的错误，因为虚拟机无法执行格式错误的程序代码。</li>
                    <li>验证发件人帐户中是否有足够的余额来支付交易中指定的最大Gas量，从而确保交易可以支付资源使用费。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="执行-虚拟机-vm3"></a><a href="#执行-虚拟机-vm3" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行 → 虚拟机 (VM.3)</h3>
                  <p>执行组件通过调用虚拟机的 <code>VM::ExecuteTransaction()</code> 执行交易。</p>
                  <p>这里重点要理解：执行交易不同于更新分布式账本的状态和将执行结果保存在存储。 交易 T<sub>N</sub> 作为在共识期间尝试达成一致的一部分先执行。
                    如果与其他验证节点就交易顺序及其执行结果达成了一致，那么结果就将保留在存储中，并更新分布式账本的状态。</p>
                  <h3><a class="anchor" aria-hidden="true" id="内存池-虚拟机-vm4"></a><a href="#内存池-虚拟机-vm4"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>内存池 → 虚拟机 (VM.4)</h3>
                  <p>当内存池通过共享的内存池从其他验证器接收交易时，内存池会在虚拟机上调用 <code>VM::ValidateTransaction()</code> 来验证交易。
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="虚拟机文档"></a><a href="#虚拟机文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>虚拟机文档</h3>
                  <p>详细的实现细节参考<a href="vm.htm">虚拟机文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="内存池"></a><a href="#内存池" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>内存池</h2>
                  <p><img src="mempool.svg" alt="图 1.4 内存池">
                    <small class="figure">图 1.4 内存池</small></p>
                  <p>内存池是一个共享缓冲区，用于保存“等待”执行的交易。 当新交易添加到内存池时，内存池与区块链系统中的其他验证器共享此交易。
                    为了减少“共享内存池”中的网络消耗，每个验证器负责将其自己的交易传递给其他验证器。
                    当一个验证器从另一个验证器的内存池接收到一个交易时，该交易将被添加到接收者验证器的内存池中。</p>
                  <h3><a class="anchor" aria-hidden="true" id="ac-内存池-mp1"></a><a href="#ac-内存池-mp1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 内存池 (MP.1)</h3>
                  <ul>
                    <li>执行初始验证检查后，验证器的AC将交易发送到验证器的内存池。</li>
                    <li>但是仅当 T<sub>N</sub> 的序列号大于或等于发件人帐户的当前序列号时，验证器 V<sub>X</sub> 中的内存池才接收发送人帐户的交易
                      T<sub>N</sub> 。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="内存池-其他验证器-mp2"></a><a href="#内存池-其他验证器-mp2"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>内存池 → 其他验证器 (MP.2)</h3>
                  <ul>
                    <li>验证器 V<sub>X</sub> 的内存池与同一网络中的其他验证器共享交易 T<sub>N</sub> 。</li>
                    <li>其他验证器与验证器 V<sub>X</sub> （相互）共享内存池中的（所有）交易。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="共识-内存池-mp3"></a><a href="#共识-内存池-mp3" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 内存池 (MP.3)</h3>
                  <ul>
                    <li>当验证器 V<sub>X</sub> 成为领导者时，其共识模块将从其内存池中提取一个交易块并将该块复制给其他验证器。
                      这样做的目的是为了将交易的排序和块中交易的执行结果达成共识。</li>
                    <li>请注意，因为交易 T<sub>N</sub> 包含在共识块中，它不能保证 T<sub>N</sub> 最终会存储在区块链的分布式数据库中永久存储。
                    </li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="内存池-虚拟机-mp4"></a><a href="#内存池-虚拟机-mp4"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>内存池 → 虚拟机 (MP.4)</h3>
                  <p>当内存池从其他验证器接收到交易时，内存池会在虚拟机上调用 <code>VM::ValidateTransaction()</code> 来验证交易。</p>
                  <h3><a class="anchor" aria-hidden="true" id="内存池文档"></a><a href="#内存池文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>内存池文档</h3>
                  <p>详细的实现细节参考<a href="mempool.htm">内存池文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="共识"></a><a href="#共识" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识</h2>
                  <p><img src="consensus.svg" alt="图 1.5 共识">
                    <small class="figure">图 1.5 共识组件</small></p>
                  <p>共识组件负责处理排序交易块，并通过与网络中参与[共识协议]的其他验证器一起达成一致结果。</p>
                  <h3><a class="anchor" aria-hidden="true" id="共识-内存池-co1"></a><a href="#共识-内存池-co1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 内存池 (CO.1)</h3>
                  <p>当验证器 V<sub>X</sub> 是领导者/提议者时，验证器 V<sub>X</sub> 的共识通过
                    <code>Mempool::GetBlock()</code> 从其内存池中提取一个交易块，并发出提议。</p>
                  <h3><a class="anchor" aria-hidden="true" id="共识-其他验证器-co2"></a><a href="#共识-其他验证器-co2"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 其他验证器 (CO.2)</h3>
                  <p>如果 V<sub>X</sub> 是提议者/领导者，则其共识组件将提取的交易块复制给其他验证器。</p>
                  <h3><a class="anchor" aria-hidden="true" id="共识-执行-共识-其他验证器-co3"></a><a href="#共识-执行-共识-其他验证器-co3"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 执行, 共识 → 其他验证器 (CO.3)</h3>
                  <ul>
                    <li>为了一个交易块得到执行，共识与执行组件进行交互。 通过调用执行组件 <code>Execution:ExecuteBlock()</code>
                      来执行交易 (参考 <a href="#共识-执行-ex1">共识 → 执行</a>)</li>
                    <li>在执行完块中的所有交易之后，执行组件响应（结果返回）共识组件这些交易执行的结果。</li>
                    <li>共识签署执行后的结果，并尝试与参与协商的其他验证节点就此结果达成一致。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="共识-执行-co4"></a><a href="#共识-执行-co4" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 执行 (CO.4)</h3>
                  <p>如果网络中有足够的验证器为同一执行结果投票，则验证器 V<sub>X</sub> 的共识组件通过
                    <code>Execution::CommitBlock()</code> 来通知执行组件该交易块已准备好提交。</p>
                  <h3><a class="anchor" aria-hidden="true" id="共识文档"></a><a href="#共识文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识文档</h3>
                  <p>详细的实现细节参考<a href="consensus.htm">共识文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="执行"></a><a href="#执行" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行</h2>
                  <p><img src="execution.svg" alt="图 1.6 执行">
                    <small class="figure">图 1.6 执行</small></p>
                  <p>执行组件的工作是协调交易块（区块），并维持一个可以通过共识协商投票的过渡状态。</p>
                  <h3><a class="anchor" aria-hidden="true" id="共识-执行-ex1"></a><a href="#共识-执行-ex1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 执行 (EX.1)</h3>
                  <ul>
                    <li>共识组件通过 <code>Execution::ExecuteBlock()</code> 来请求执行组件执行交易块。</li>
                    <li>执行组件维护一个“暂存器”，它将保存存储器中<a href="#merkle-accumulators">Merkle累加器</a>中相关部分的副本。
                      此信息用于计算区块链当前状态的根哈希值。</li>
                    <li>当前状态的根哈希与关于块中的交易信息组合以确定Merkle累加器的新根哈希值。
                      这一步在保留任何数据之前就执行了，这是为了确保在足够数量的验证者达成协议之前不会存储任何状态或交易。</li>
                    <li>执行组件计算推测根哈希值，然后验证器 V<sub>X</sub> 的共识签署此根哈希值，并尝试与其他验证器达成对此根哈希值的协议。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="执行-虚拟机-ex2"></a><a href="#执行-虚拟机-ex2" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行 → 虚拟机 (EX.2)</h3>
                  <p>当共识请求执行组件使用：<code>Execution::ExecuteBlock()</code> 执行交易块时，执行组件使用虚拟机来确定执行交易块的结果。
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="共识-执行-ex3"></a><a href="#共识-执行-ex3" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>共识 → 执行 (EX.3)</h3>
                  <p>如果足够（法定）数量的验证器同意该块的执行结果，那么每个验证器调用其执行组件的 <code>Execution::CommitBlock()</code>
                    表示区块已准备提交。 该调用会包含同意验证器的签名及为证明其同意了提案。</p>
                  <h3><a class="anchor" aria-hidden="true" id="执行-存储-ex4"></a><a href="#执行-存储-ex4" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行 → 存储 (EX.4)</h3>
                  <p>执行组件从其“暂存器”获取值，并通过 <code>Storage::SaveTransactions()</code> 将它们发送到存储器以实现持久存储。
                    执行筛选删除 “暂存器” 中的旧值（例如，无法提交的块）。</p>
                  <h3><a class="anchor" aria-hidden="true" id="执行文档"></a><a href="#执行文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行文档</h3>
                  <p>详细的实现细节参考<a href="crates/execution">执行文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="存储"></a><a href="#存储" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>存储</h2>
                  <p><img src="storage.svg" alt="图 1.7 存储">
                    <small class="figure">图 1.7 存储</small></p>
                  <p>存储组件保存共识执行后的交易块及其执行结果。 在以下情况下，一个/一组块的交易（包括交易 T<sub>N</sub> ）将通过存储组件保存：</p>
                  <ul>
                    <li>只要网络中超过 2f+1 的验证者就以下所有问题通过共识协议达成共识：
                      <ul>
                        <li>在块中包含哪些交易。</li>
                        <li>交易的排序。</li>
                        <li>包含在块中的交易的执行结果。</li>
                      </ul>
                    </li>
                  </ul>
                  <p>有关如何将交易附加到区块链中数据结构的信息，请参阅<a
                      href="glossary.htm#merkle-累加器">Merkle累加器</a>
                    。</p>
                  <h3><a class="anchor" aria-hidden="true" id="虚拟机-存储-st1"></a><a href="#虚拟机-存储-st1" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>虚拟机 → 存储 (ST.1)</h3>
                  <p>
                    当AC或内存池调用<code>VM::ValidateTransaction()</code>来验证交易时，<code>VM::ValidateTransaction()</code>从存储中加载发送人的帐户，并通过仅读方式来检查交易的有效性。
                  </p>
                  <h3><a class="anchor" aria-hidden="true" id="执行-存储-st2"></a><a href="#执行-存储-st2" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行 → 存储 (ST.2)</h3>
                  <p>当共识组件调用 <code>Execution::ExecuteBlock()</code>
                    时，执行组件从存储中读取当前状态并结合内存中的“暂存器”数据来确定执行结果。</p>
                  <h3><a class="anchor" aria-hidden="true" id="执行-存储-st3"></a><a href="#执行-存储-st3" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>执行 → 存储 (ST.3)</h3>
                  <ul>
                    <li>一旦达成了对交易块的共识，执行组件就会通过调用
                      <code>Storage::SaveTransactions()</code>来存储来保存交易块并永久记录它们。
                      同时还将存储网络中同意该交易块验证器节点的数字签名。</li>
                    <li>该块中“暂存器”的内存数据将更新到存储中，并保存交易。</li>
                    <li>更新存储时，所有被交易变更过的资源的序列号都会相应更新。</li>
                    <li>注意：对于来自该帐户的每个已提交交易，Libra区块链上的帐户序列号都会增加1。</li>
                  </ul>
                  <h3><a class="anchor" aria-hidden="true" id="ac-存储-st4"></a><a href="#ac-存储-st4" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>AC → 存储 (ST.4)</h3>
                  <p>客户端查询区块链中的信息，AC直接与存储组件交互以读取所请求的信息。</p>
                  <h3><a class="anchor" aria-hidden="true" id="存储文档"></a><a href="#存储文档" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>存储文档</h3>
                  <p>详细的实现细节参考<a href="storage.htm">存储文档</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="reference"></a><a href="#reference" aria-hidden="true"
                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                        viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Reference</h2>
                  <ul>
                    <li><a href="welcome-to-libra.htm">来到 Libra 世界</a>.</li>
                    <li><a href="libra-protocol.htm">Libra 协议核心概念</a> — 介绍Libra 协议的核心概念
                    </li>
                    <li><a href="my-first-transaction.htm">Libra上的第一笔交易</a> — 指导使用Libra
                      CLI客户端在Libra区块链上执行第一笔交易。</li>
                    <li><a href="move-overview.htm">了解 Move 语言</a> — 介绍新区块链编程语言Move。
                    </li>
                    <li><a href="libra-core-overview.htm">Libra Core 概要</a> — Libra
                      Core 组件的概念和实现细节。</li>
                    <li><a href="reference/libra-cli.htm">CLI 命令指南</a> — 列出Libra
                      CLI客户端的命令及其用法。</li>
                    <li><a href="reference/glossary.htm.htm">Libra 术语表</a> —
                      提供Libra术语的快速参考。</li>
                    <li><a href="state-machine-replication-paper.htm">Libra区块链中的状态机复制</a>
                      — 详细介绍我们的共识协议<strong>LibraBFT</strong>。</li>
                  </ul>
                </span></div>
            </article>
          </div>
          <div class="docs-prevnext"><a class="docs-prev button" href="libra-protocol.htm"><span
                class="arrow-prev">← </span><span>Libra 协议核心概念</span></a><a class="docs-next button"
              href="the-libra-blockchain-paper.htm"><span>Libra 区块链</span><span class="arrow-next">
                →</span></a></div>
        </div>
      </div>
      <nav class="onPageNav">
        <ul class="toc-headings">
          <li><a href="#客户提交交易">客户提交交易</a>
            <ul class="toc-headings">
              <li><a href="#交易前的假设">交易前的假设</a></li>
            </ul>
          </li>
          <li><a href="#交易的生命周期">交易的生命周期</a>
            <ul class="toc-headings">
              <li><a href="#接收交易">接收交易</a></li>
              <li><a href="#发布交易至其他验证器节点">发布交易至其他验证器节点</a></li>
              <li><a href="#块提议">块提议</a></li>
              <li><a href="#区块执行和达成共识">区块执行和达成共识</a></li>
              <li><a href="#区块提交">区块提交</a></li>
            </ul>
          </li>
          <li><a href="#验证器组件交互">验证器组件交互</a></li>
          <li><a href="#准入控制-ac">准入控制 (AC)</a>
            <ul class="toc-headings">
              <li><a href="#客户端-ac-ac1">客户端 → AC (AC.1)</a></li>
              <li><a href="#ac-虚拟机-ac2">AC → 虚拟机 (AC.2)</a></li>
              <li><a href="#ac-内存池-ac3">AC → 内存池 (AC.3)</a></li>
              <li><a href="#ac-存储-ac4">AC → 存储 (AC.4)</a></li>
              <li><a href="#准入控制文档">准入控制文档</a></li>
            </ul>
          </li>
          <li><a href="#虚拟机-vm">虚拟机 (VM)</a>
            <ul class="toc-headings">
              <li><a href="#ac-虚拟机-vm1">AC → 虚拟机 (VM.1)</a></li>
              <li><a href="#虚拟机-存储-vm2">虚拟机 → 存储 (VM.2)</a></li>
              <li><a href="#执行-虚拟机-vm3">执行 → 虚拟机 (VM.3)</a></li>
              <li><a href="#内存池-虚拟机-vm4">内存池 → 虚拟机 (VM.4)</a></li>
              <li><a href="#虚拟机文档">虚拟机文档</a></li>
            </ul>
          </li>
          <li><a href="#内存池">内存池</a>
            <ul class="toc-headings">
              <li><a href="#ac-内存池-mp1">AC → 内存池 (MP.1)</a></li>
              <li><a href="#内存池-其他验证器-mp2">内存池 → 其他验证器 (MP.2)</a></li>
              <li><a href="#共识-内存池-mp3">共识 → 内存池 (MP.3)</a></li>
              <li><a href="#内存池-虚拟机-mp4">内存池 → 虚拟机 (MP.4)</a></li>
              <li><a href="#内存池文档">内存池文档</a></li>
            </ul>
          </li>
          <li><a href="#共识">共识</a>
            <ul class="toc-headings">
              <li><a href="#共识-内存池-co1">共识 → 内存池 (CO.1)</a></li>
              <li><a href="#共识-其他验证器-co2">共识 → 其他验证器 (CO.2)</a></li>
              <li><a href="#共识-执行-共识-其他验证器-co3">共识 → 执行, 共识 → 其他验证器 (CO.3)</a></li>
              <li><a href="#共识-执行-co4">共识 → 执行 (CO.4)</a></li>
              <li><a href="#共识文档">共识文档</a></li>
            </ul>
          </li>
          <li><a href="#执行">执行</a>
            <ul class="toc-headings">
              <li><a href="#共识-执行-ex1">共识 → 执行 (EX.1)</a></li>
              <li><a href="#执行-虚拟机-ex2">执行 → 虚拟机 (EX.2)</a></li>
              <li><a href="#共识-执行-ex3">共识 → 执行 (EX.3)</a></li>
              <li><a href="#执行-存储-ex4">执行 → 存储 (EX.4)</a></li>
              <li><a href="#执行文档">执行文档</a></li>
            </ul>
          </li>
          <li><a href="#存储">存储</a>
            <ul class="toc-headings">
              <li><a href="#虚拟机-存储-st1">虚拟机 → 存储 (ST.1)</a></li>
              <li><a href="#执行-存储-st2">执行 → 存储 (ST.2)</a></li>
              <li><a href="#执行-存储-st3">执行 → 存储 (ST.3)</a></li>
              <li><a href="#ac-存储-st4">AC → 存储 (ST.4)</a></li>
              <li><a href="#存储文档">存储文档</a></li>
            </ul>
          </li>
          <li><a href="#reference">Reference</a></li>
        </ul>
      </nav>
    </div>
    <footer class="nav-footer" id="footer">
        <section class="sitemap"><a href="https://developers.libra.org/" class="nav-home"><img
              src="libra-logomark-white.png" alt="Libra" /></a>
          <div class="footerSection">
            <h5>Learn About Libra</h5><a href="welcome-to-libra.htm">Welcome to Libra</a><a
              href="libra-protocol.htm">Libra Protocol</a><a href="the-libra-blockchain-paper.htm">Libra Blockchain</a><a
              href="life-of-a-transaction.htm">Life of a Transaction</a>
            <p></p>
            <h5>Try Libra Core </h5><a href="my-first-transaction.htm">My First Transaction</a><a
              href="move-overview.htm">Getting Started With Move</a>
          </div>
          <div class="footerSection">
            <h5>Policies</h5><a href="https://developers.libra.org/docs/policies/privacy-policy.htm">Privacy Policy</a><a href="https://developers.libra.org/docs/policies/terms-of-use.htm">Terms of Use</a><a
              href="https://developers.libra.org/docs/policies/cookies-policy.htm">Cookies Policy</a><a href="https://developers.libra.org/docs/policies/code-of-conduct.htm">Code of Conduct</a>
            <p></p>
            <h5>Community</h5><a href="https://community.libra.org/">Developer Forum</a><a
              href="https://developers.libra.org/newsletter_form">Newsletter</a>
          </div>
          <div class="footerSection">
            <h5>Libra开发者社区</h5>
            <img style="width:150px" src='qr_violas.png'>
            <h5>备注"Libra"加群<h5>
          </div>
        </section>
        <section class="copyright"> © Violas Association</section>
      </footer>
  </div>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js"></script>
  <script>
    document.addEventListener('keyup', function (e) {
      if (e.target !== document.body) {
        return;
      }
      // keyCode for '/' (slash)
      if (e.keyCode === 191) {
        const search = document.getElementById('search_input_react');
        search && search.focus();
      }
    });
  </script>
  <script>
    var search = docsearch({

      apiKey: '0d48ee629d39ddc4916eeef7755a0c4c',
      indexName: 'libra',
      inputSelector: '#search_input_react'
    });
  </script>
</body>

</html>