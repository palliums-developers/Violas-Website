<!DOCTYPE html>
<html lang="en">

<head>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <title>My First Transaction · Libra</title>
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content="Docusaurus" />
  <meta name="description"
    content="This document will guide you through executing your first transaction on the Libra Blockchain. Before you follow the steps to execute your first transaction, we recommend that you read the following documents to familiarize yourself with the key aspects of the Libra ecosystem and the Libra protocol:" />
  <meta name="docsearch:language" content="en" />
  <meta property="og:title" content="My First Transaction · Libra" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://developers.libra.org/" />
  <meta property="og:description"
    content="This document will guide you through executing your first transaction on the Libra Blockchain. Before you follow the steps to execute your first transaction, we recommend that you read the following documents to familiarize yourself with the key aspects of the Libra ecosystem and the Libra protocol:" />
  <meta property="og:image" content="https://developers.libra.org/img/libra.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:image" content="https://developers.libra.org/img/libra.png" />
  <link rel="shortcut icon" href="libra.ico" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css" />
  <link rel="alternate" type="application/atom+xml" href="atom.xml" title="Libra Blog ATOM Feed" />
  <link rel="alternate" type="application/rss+xml" href="feed.xml" title="Libra Blog RSS Feed" />
  <script type="text/javascript" src="buttons.js"></script>
  <script type="text/javascript" src="code_block_buttons.js"></script>
  <script type="text/javascript" src="cookie_banner.js"></script>
  <script type="text/javascript" src="disable_adblock.js"></script>
  <script type="text/javascript" src="segment.analytics.min.js"></script>
  <script type="text/javascript" src="segment.js"></script>
  <script type="text/javascript" src="clipboardjs.2.0.0.min.js"></script>
  <script type="text/javascript" src="forms.js"></script>
  <script src="scrollSpy.js"></script>
  <link rel="stylesheet" href="main.css" />
  <script src="codetabs.js"></script>
</head>

<body class="sideNavVisible separateOnPageNav">
  <div class="fixedHeaderContainer">
    <div class="headerWrapper wrapper">
      <header><a href="https://developers.libra.org/"><img class="logo" src="libra-nav-logo.png" alt="Libra" />
          <h2 class="headerTitleWithLogo">Libra</h2>
        </a>
        <div class="navigationWrapper navigationSlider">
          <nav class="slidingNav">
            <ul class="nav-site nav-site-internal">
              <li class=""><a href="https://violas.io/">主页</a></li>
              <li class="siteNavGroupActive"><a href="welcome-to-libra.htm" target="_self">文档</a></li>
              <li class=""><a href="https://community.libra.org" target="_self">Libra 社区</a></li>
              <li class=""><a href="blog_2.html" target="_self">Libra Blog</a></li>
              <li class=""><a href="https://libra.org" target="_self">libra 官网</a></li>
              <li class=""><a href="https://github.com/libra/libra" target="_self">Libra GitHub</a></li>
              <li class=""><a href="../lib_doc_en/my-first-transaction.htm">中/EN</a></li>
              <li class="navSearchWrapper reactNavSearchWrapper"><input type="text" id="search_input_react"
                  placeholder="Search" title="Search" /></li>
            </ul>
          </nav>
        </div>
      </header>
    </div>
  </div>
  <div class="navPusher">
    <div class="docMainWrapper wrapper">
      <div class="docsNavContainer" id="docsNav">
        <nav class="toc">
          <div class="toggleNav">
            <section class="navWrapper wrapper">
              <div class="navBreadcrumb wrapper">
                <div class="navToggle" id="navToggler">
                  <div class="hamburger-menu">
                    <div class="line1"></div>
                    <div class="line2"></div>
                    <div class="line3"></div>
                  </div>
                </div>
                <h2><i>›</i><span>学习 Libra</span></h2>
                <div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div>
              </div>
              <div class="navGroups">
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习 Libra</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="welcome-to-libra.htm">欢迎</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="libra-protocol.htm">Libra 协议: 核心概念</a></li>
                    <li class="navListItem"><a class="navItem" href="life-of-a-transaction.htm">交易的生命周期</a></li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">技术论文</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="the-libra-blockchain-paper.htm">Libra 区块链</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="move-paper.htm">Move: 一种可编程资源的语言</a></li>
                        <li class="navListItem"><a class="navItem"
                            href="state-machine-replication-paper.htm">Libra区块链中状态机的复制</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习Libra核心</h3>
                  <ul class="">
                    <li class="navListItem navListItemActive"><a class="navItem"
                        href="my-first-transaction.htm">我的第一笔交易</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="move-overview.htm">Move概述</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="run-local-network.htm">在本地网络上运行</a></li>
                    <li class="navListItem"><a class="navItem" href="run-move-locally.htm">本地运行Move程序</a>
                    </li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">社区</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-open-source-paper.htm">Libra开源</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="contributing.htm">贡献指南</a></li>
                    <li class="navListItem"><a class="navItem" href="coding-guidelines.htm">代码指南</a></li>
                    <li class="navListItem"><a class="navItem" href="security.htm">报告漏洞</a></li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Libra 协议实现</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-core-overview.htm">Libra Core概述</a>
                    </li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">READMEs</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="admission-control.htm">准入控制 admission
                            control</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="bytecode-verifier.htm">字节码验证器 Bytecode
                            Verifier</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="consensus.htm">共识组件 Consensus</a></li>
                        <li class="navListItem"><a class="navItem" href="crypto.htm">加密组件 Crypto</a></li>
                        <li class="navListItem"><a class="navItem" href="execution.htm">执行组件 Execution</a></li>
                        <li class="navListItem"><a class="navItem" href="mempool.htm">内存池 Mempool</a></li>
                        <li class="navListItem"><a class="navItem" href="ir-to-bytecode.htm">Move IR 编译器</a></li>
                        <li class="navListItem"><a class="navItem" href="move-language.htm">Move 语言</a></li>
                        <li class="navListItem"><a class="navItem" href="network.htm">网络组件 Network</a></li>
                        <li class="navListItem"><a class="navItem" href="storage.htm">存储组件 Storage</a></li>
                        <li class="navListItem"><a class="navItem" href="vm.htm">虚拟机 Virtual Machine</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">参考引用</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-cli.htm">Libra命令行工具</a></li>
                    <li class="navListItem"><a class="navItem" href="glossary.htm">词汇表</a></li>
                  </ul>
                </div>
              </div>
            </section>
          </div>
          <script>
            var coll = document.getElementsByClassName('collapsible');
            var checkActiveCategory = true;
            for (var i = 0; i < coll.length; i++) {
              var links = coll[i].nextElementSibling.getElementsByTagName('*');
              if (checkActiveCategory) {
                for (var j = 0; j < links.length; j++) {
                  if (links[j].classList.contains('navListItemActive')) {
                    coll[i].nextElementSibling.classList.toggle('hide');
                    coll[i].childNodes[1].classList.toggle('rotate');
                    checkActiveCategory = false;
                    break;
                  }
                }
              }

              coll[i].addEventListener('click', function () {
                var arrow = this.childNodes[1];
                arrow.classList.toggle('rotate');
                var content = this.nextElementSibling;
                content.classList.toggle('hide');
              });
            }

            document.addEventListener('DOMContentLoaded', function () {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              var headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function (event) {
                var el = event.target;
                while (el !== headings) {
                  if (el.tagName === 'A') {
                    document.body.classList.remove('tocActive');
                    break;
                  } else {
                    el = el.parentNode;
                  }
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function (event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
          </script>
        </nav>
      </div>
      <div class="container mainContainer">
          <div class="wrapper">
              <div class="post">
                  <header class="postHeader"><a class="edit-page-link button"
                          href="https://github.com/lbc-team/libra-docs/edit/lbc/docs/my-first-transaction.md"
                          target="_blank" rel="noreferrer noopener">编辑</a>
                      <h1 class="postHeaderTitle">我的第一笔交易</h1>
                  </header>
                  <article>
                      <div><span>
                              <p>本文档将指导您在 Libra 区块链上执行第一笔交易。 在执行第一笔交易的步骤之前，我们建议您阅读以下文档，以熟悉 Libra 生态系统和 Libra
                                  协议的关键概念：</p>
                              <ul>
                                  <li><a href="welcome-to-libra.htm">Libra欢迎页 </a></li>
                                  <li><a href="libra-protocol.htm"> Libra 协议核心概念</a></li>
                              </ul>
                              <p>我们提供了一个命令行界面（CLI）客户端来与区块链进行交互。</p>
                              <h2><a class="anchor" aria-hidden="true" id="约定假设条件"></a><a href="#约定假设条件"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>约定假设条件</h2>
                              <p>本文档中的所有命令均假定已经完成如下准备：</p>
                              <ul>
                                  <li>您运行的是 Linux（基于Red Hat或Debian）或 macOS系统。</li>
                                  <li>可以稳定地连接到互联网。</li>
                                  <li>您的系统上安装了 <code>git</code> 。</li>
                                  <li>macOS 上已安装了 Homebrew。</li>
                                  <li>Linux系统上安装了 <code>yum</code> 或者 <code>apt-get</code> 。</li>
                              </ul>
                              <h2><a class="anchor" aria-hidden="true" id="提交交易的步骤"></a><a href="#提交交易的步骤"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>提交交易的步骤</h2>
                              <p>在这个例子中，我们将下载必要的 Libra 组件并在两个用户（Alice和Bob）之间执行一个交易操作。
                                  执行以下步骤将交易提交到 Libra 测试网络 testnet上的验证节点：</p>
                              <ol>
                                  <li><a href="#克隆并编译-libra-core">克隆并构建 Libra Core</a>.</li>
                                  <li><a href="#编译-libra-cli-客户端并连接到testnet">编译 Libra CLI客户端并连接到testnet</a>.</li>
                                  <li><a href="#创建alice和bob的账户">创建Alice和Bob的帐户</a>.</li>
                                  <li><a href="#添加libra-币到alice和bob账户">铸币并添加到Alice和Bob的账户</a>.</li>
                                  <li><a href="#提交交易">提交交易</a>.</li>
                              </ol>
                              <h2><a class="anchor" aria-hidden="true" id="克隆并编译-libra-core"></a><a
                                      href="#克隆并编译-libra-core" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>克隆并编译 Libra Core</h2>
                              <h3><a class="anchor" aria-hidden="true" id="克隆-libra-core库"></a><a
                                      href="#克隆-libra-core库" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>克隆 Libra Core库</h3>
                              <pre><code class="hljs css language-bash">git <span class="hljs-built_in">clone</span> https://github.com/libra/libra.git
</code></pre>
                              <h3><a class="anchor" aria-hidden="true" id="安装-libra-core"></a><a
                                      href="#安装-libra-core" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>安装 Libra Core</h3>
                              <p>要安装 Libra Core，请切换到 <code>libra</code> 目录并运行安装脚本来安装相关的依赖项，如下所示：</p>
                              <pre><code class="hljs">cd libra
./scripts/dev_setup.sh
</code></pre>
                              <p>安装脚本执行以下操作：</p>
                              <ul>
                                  <li>安装rustup ＆mdash; rustup 是 Rust 编程语言的安装程序，Libra Core是基于Rust实现的。</li>
                                  <li>安装相应版本的 Rust 工具链（rust-toolchain）.</li>
                                  <li>安装CMake — 用于管理编译过程。</li>
                                  <li>安装protoc — 协议缓存（protocol buffers）编译器。</li>
                                  <li>安装Go — 用于编译协议缓存。</li>
                              </ul>
                              <p>如果您的安装失败，详见<a href="#安装">故障排除说明</a></p>
                              <h2><a class="anchor" aria-hidden="true" id="编译-libra-cli-客户端并连接到testnet"></a><a
                                      href="#编译-libra-cli-客户端并连接到testnet" aria-hidden="true"
                                      class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                                          version="1.1" viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>编译 Libra Cli 客户端并连接到testnet</h2>
                              <p>为了连接到 Libra testnet 网络的验证器节点，如下图所示运行客户端：</p>
                              <pre><code class="hljs css language-bash">./scripts/cli/start_cli_testnet.sh
</code></pre>
                              <p>这个命令构建和运行客户端使用cargo（Rust的包管理器），并将客户端连接到testnet上的验证器节点。</p>
                              <p>客户端连接到testnet上的节点后，您将看到以下输出。 要随时退出客户端，请使用<code>quit</code>命令。</p>
                              <pre><code class="hljs">usage: &lt;command&gt; &lt;args&gt;

Use the following commands:

account | a
Account operations
query | q
Query operations
transfer | transferb | t | tb
&lt;sender_account_address&gt;|&lt;sender_account_ref_id&gt; &lt;receiver_account_address&gt;|&lt;receiver_account_ref_id&gt; &lt;number_of_coins&gt; [gas_unit_price (default=0)] [max_gas_amount (default 10000)] Suffix 'b' is for blocking.
Transfer coins from account to another.
help | h
Prints this help
quit | q!
Exit this client


Please, input commands:

libra%
</code></pre>
                              <p>如果您在编译运行客户端和连接到testnet时遇到问题，请参阅<a href="#客户端编译运行">故障排除说明</a>.</p>
                              <blockquote class="block_note">
                                  <p><strong>注意</strong>: 如果要在系统上本地运行验证器节点，请按照<a
                                          href="#运行本地验证器节点">运行本地验证器</a>中的说明进行操作。 创建帐户，铸币和执行交易的说明与testnet上的节点相同。
                                  </p>
                              </blockquote>
                              <h2><a class="anchor" aria-hidden="true" id="创建alice和bob的账户"></a><a
                                      href="#创建alice和bob的账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>创建Alice和Bob的账户</h2>
                              <p>将客户端连接到testnet后，可以运行CLI命令来创建新帐户。这里为两个用户（Alice和Bob）创建帐户。</p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤1-检查cli客户端是否在系统上运行"></a><a
                                      href="#步骤1-检查cli客户端是否在系统上运行" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤1：检查CLI客户端是否在系统上运行</h3>
                              <p>出现一个 <strong>libra%</strong> 命令行提示符表示您的 Libra CLI客户端正在运行。
                                  要查看<code>account</code>命令的帮助信息，请输入“account”，如下所示：</p>
                              <pre><code class="hljs css language-plaintext">libra% account
usage: account &lt;arg&gt;

Use the following args for this command:

create | c
Create an account. Returns reference ID to use in other operations
list | la
Print all accounts that were created or loaded
recover | r &lt;file path&gt;
Recover Libra wallet from the file path
write | w &lt;file name&gt;
Save Libra wallet mnemonic recovery seed to disk
mint | mintb | m | mb &lt;receiver account&gt; &lt;number of coins&gt;
Mint coins to the account. Suffix 'b' is for blocking
</code></pre>
                              <h3><a class="anchor" aria-hidden="true" id="步骤2-创建alice账户"></a><a
                                      href="#步骤2-创建alice账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤2：创建Alice账户</h3>
                              <p>请注意，使用CLI创建帐户不会更新区块链，只会创建本地密钥对。</p>
                              <p>要创建Alice的帐户，请输入以下命令：</p>
                              <p><code>libra% account create</code></p>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">&gt;&gt; Creating/retrieving next account from wallet
Created/retrieved account #0 address 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8
</code></pre>
                              <p>＃0是Alice帐户的索引，十六进制字符串是Alice帐户的地址。 索引只是引用Alice帐户的一种方式。
                                  帐户索引是本地CLI索引，可以在其他CLI命令中使用，以便用户方便地引用他们创建的帐户。 该指数对区块链毫无意义。
                                  只有当通过铸币（挖矿）将任何一笔钱添加到Alice的账户时，才会在区块链上创建Alice的账户，或者通过来自另一个用户的转账将钱转移到Alice的账户。
                                  请注意，您也可以在CLI命令中使用十六进制地址。 帐户索引只是帐户地址的方便显示。</p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤3-创建bob的账户"></a><a
                                      href="#步骤3-创建bob的账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤3: 创建Bob的账户</h3>
                              <p>要创建Bob的帐户，请重复之前帐户创建命令：</p>
                              <p><code>libra% account create</code></p>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">&gt;&gt; Creating/retrieving next account from wallet
Created/retrieved account #1 address 8337aac709a41fe6be03cad8878a0d4209740b1608f8a81566c9a7d4b95a2ec7
</code></pre>
                              <p>#1 是Bob帐户的索引，十六进制字符串是Bob帐户的地址。
                                  有关索引的更多详细信息，请参阅<a href="#步骤2-创建Alice账户">创建Alice的账户</a></p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤4-可选-账户列表"></a><a href="#步骤4-可选-账户列表"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤4 (可选): 账户列表</h3>
                              <p>要列出您创建的帐户，请输入以下命令：</p>
                              <p><code>libra% account list</code></p>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">User account index: 0, address: 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8, sequence number: 0
User account index: 1, address: 8337aac709a41fe6be03cad8878a0d4209740b1608f8a81566c9a7d4b95a2ec7, sequence number: 0
</code></pre>
                              <p>帐户中的序列号表示从该帐户发送的交易数。 每次从该帐户发送的交易被执行后并存储在区块链中时，它会递增。 要了解更多信息，请参阅 <a
                                      href="glossary.htm#序列号">序列号</a>.</p>
                              <h2><a class="anchor" aria-hidden="true" id="添加libra-币到alice和bob账户"></a><a
                                      href="#添加libra-币到alice和bob账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>添加Libra 币到Alice和Bob账户</h2>
                              <p>在testnet上创建和铸币是通过Faucet完成的。 Faucet是一种与testnet一起运行的服务。 此服务仅用于为testnet创建硬币，并不用运行在<a
                                      href="glossary.htm#主网">主网</a>上. 它创建的Libra
                                  币并没有真实的价值，假设<a href="#创建Alice和Bob的账户">创建Alice和Bob的账户</a>,
                                  分别使用了索引0和索引1，您可以按照以下步骤将Libra 币添加到两个帐户。</p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤1-添加110个libra到alice账户"></a><a
                                      href="#步骤1-添加110个libra到alice账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤1: 添加110个Libra到Alice账户</h3>
                              <p>铸造Libra币，并添加到Alice的帐户，输入以下命令:</p>
                              <p><code>libra% account mint 0 110</code></p>
                              <ul>
                                  <li>0 是Alice账户的索引号。</li>
                                  <li>110 是要添加到Alice账户的Libra币数量。</li>
                              </ul>
                              <p>账户成功运行铸币命令，也会在Libra区块链上创建Alice的账户。</p>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">&gt;&gt; Minting coins
Mint request submitted
</code></pre>
                              <p>请注意，提交请求时，这意味着它已成功添加到内存池（testnet上的验证程序节点）。 但并不一定意味着它将执行完成。 稍后，我们将查询帐户余额以确认铸币是否成功。
                              </p>
                              <p>如果您的帐户铸币命令未成功提交您的请求，请参阅<a href="#铸币添加到账户">故障排除说明</a></p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤2-添加52个libra币到bob账户"></a><a
                                      href="#步骤2-添加52个libra币到bob账户" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤2: 添加52个Libra币到Bob账户</h3>
                              <p>铸造Libra币，并添加到Bob的帐户，输入以下命令:</p>
                              <p><code>libra% account mint 1 52</code></p>
                              <ul>
                                  <li>1 是Bob账户的索引号。</li>
                                  <li>52 是要添加到Bob账户的Libra数量。</li>
                                  <li>账户成功运行铸币命令，也会在Libra区块链上创建Bob的账户，在区块链上创建Bob帐户的另一种方法是将钱从Alice的帐户交易到Bob的帐户。
                                  </li>
                              </ul>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">&gt;&gt; Minting coins
Mint request submitted
</code></pre>
                              <p>如果您的帐户铸币命令未成功提交您的请求，请参阅<a href="#铸币添加到账户">故障排除说明</a></p>
                              <h3><a class="anchor" aria-hidden="true" id="步骤3-余额检查"></a><a href="#步骤3-余额检查"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>步骤3: 余额检查</h3>
                              <p>检查Alice账户的余额，运行如下命令：</p>
                              <p><code>libra% query balance 0</code></p>
                              <p>成功后输出如下：</p>
                              <p><code>Balance is: 110</code></p>
                              <p>检查Bob账户的余额，运行如下命令：</p>
                              <p><code>libra% query balance 1</code></p>
                              <p>成功后输出如下：</p>
                              <p><code>Balance is: 52</code></p>
                              <h2><a class="anchor" aria-hidden="true" id="提交交易"></a><a href="#提交交易"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>提交交易</h2>
                              <p>在我们将Libra从Alice的账户转移到Bob的账户的交易提交之前，我们将查询每个账户的序列号。 这将有助于我们了解交易执行过程中如何更改每个帐户的序列号。
                              </p>
                              <h3><a class="anchor" aria-hidden="true" id="查询账户的序列号"></a><a href="#查询账户的序列号"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>查询账户的序列号</h3>
                              <pre><code class="hljs css language-plaintext">libra% query sequence 0
&gt;&gt; Getting current sequence number
Sequence number is: 0
libra% query sequence 1
&gt;&gt; Getting current sequence number
Sequence number is: 0
</code></pre>
                              <p>在 <code>query sequence 0</code>, 0是Alice的帐户的索引。
                                  Alice和Bob的帐户的序列号都为0，即表示到目前为止尚未执行Alice或Bob的帐户中的任何交易。</p>
                              <h3><a class="anchor" aria-hidden="true" id="转账"></a><a href="#转账"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>转账</h3>
                              <p>提交一个从Alice账户转账10个Libra到Bob账户的交易，输入以下命令：</p>
                              <p><code>libra% transfer 0 1 10</code></p>
                              <ul>
                                  <li>0是Alice的帐户索引。</li>
                                  <li>1是Bob的帐户索引。</li>
                                  <li>10是从Alice的账户交易到Bob账户的Libra数量。</li>
                              </ul>
                              <p>成功后输出如下：</p>
                              <pre><code class="hljs css language-plaintext">&gt;&gt; Transferring
Transaction submitted to validator
To query for transaction status, run: query txn_acc_seq 0 0 &lt;fetch_events=true|false&gt;
</code></pre>
                              <p>您可以使用命令 <code>query txn_acc_seq 0 0 true</code> (按帐户和序列号进行交易)来检索有关您刚提交的交易的信息。
                                  第一个参数是发件人帐户的本地索引，第二个参数是帐户的序列号。要查看此命令的示例输出，请参阅 <a href="#通过账号和序号查询交易">输出示例</a>.
                              </p>
                              <p>您刚刚将交易提交到testnet上的验证器节点，它添加进验证器的<a
                                      href="glossary.htm#内存池">内存池</a>
                                  。这并不一定意味着您的交易已被执行。 理论上，如果系统运行缓慢或过载，则需要一些时间才能看到结果，您可能需要通过查询帐户多次检查。
                                  要查询索引为0的帐户，可以使用命令 <code>query account_state 0.</code> 预期输出显示在<a
                                      href="#事件查询">输出示例</a></p>
                              <p>要对传输命令出错进行故障排除，请参阅 <a href="#转账命令">故障排除说明</a>.</p>
                              <p><strong>块传输命令</strong>: 你可以使用 <code>transferb</code> 命令 (如下所示), 而不是
                                  <code>transfer</code> 命令。只有将交易提交到区块链上 <code>transferb</code>
                                  命令才会提交交易并给客户端反馈响应显示，一个例子如下所示：</p>
                              <p><code>libra% transferb 0 1 10</code></p>
                              <p>参考<a href="life-of-a-transaction.htm">交易的生命周期</a>
                                  了解交易从提交到执行和存储的整个过程。</p>
                              <h3><a class="anchor" aria-hidden="true" id="查询交易后序列号"></a><a href="#查询交易后序列号"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>查询交易后序列号</h3>
                              <pre><code class="hljs css language-plaintext">libra% query sequence 0
&gt;&gt; Getting current sequence number
Sequence number is: 1
libra% query sequence 1
&gt;&gt; Getting current sequence number
Sequence number is: 0
</code></pre>
                              <p>Alice的帐号（索引0）的序号为1表示到目前为止已经从Alice的帐户发送了一个交易。
                                  Bob的帐户（索引1）的序列号为0表示到目前为止尚未从Bob的帐户发送任何交易。 每次从帐户发送交易时，序列号都会增加1。</p>
                              <h3><a class="anchor" aria-hidden="true" id="检查交易后两个账户的余额"></a><a
                                      href="#检查交易后两个账户的余额" aria-hidden="true" class="hash-link"><svg
                                          class="hash-link-icon" aria-hidden="true" height="16" version="1.1"
                                          viewBox="0 0 16 16" width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>检查交易后两个账户的余额</h3>
                              <p>要检查两个帐户中的最终余额，请按照 <a href="#步骤3-余额检查">此页面步骤</a>操作，再次查询余额.
                                  如果您的交易（转账）成功执行，您应该在Alice的账户中看到100个Libra，在Bob的账户中看到62个Libra。</p>
                              <pre><code class="hljs css language-plaintext">libra% query balance 0
Balance is: 100
libra% query balance 1
Balance is: 62
</code></pre>
                              <h3><a class="anchor" aria-hidden="true" id="恭喜"></a><a href="#恭喜"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>恭喜!</h3>
                              <p>您已成功在Libra testnet上执行了您的交易，并将10个Libra从Alice的账户转移到了Bob的账户！</p>
                              <h2><a class="anchor" aria-hidden="true" id="故障排除"></a><a href="#故障排除"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>故障排除</h2>
                              <h3><a class="anchor" aria-hidden="true" id="安装"></a><a href="#安装"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>安装</h3>
                              <ul>
                                  <li>更新 Rust:
                                      <ul>
                                          <li>在libra目录运行 <code>rustup update</code> .</li>
                                      </ul>
                                  </li>
                                  <li>从libra目录重新运行安装脚本:
                                      <ul>
                                          <li><code>./scripts/dev_setup.sh</code></li>
                                      </ul>
                                  </li>
                              </ul>
                              <h3><a class="anchor" aria-hidden="true" id="客户端编译运行"></a><a href="#客户端编译运行"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>客户端编译运行</h3>
                              <p>如果您遇到构建失败，请尝试从libra目录中删除cargo.lock文件：</p>
                              <ul>
                                  <li><code>rm Cargo.lock</code></li>
                              </ul>
                              <p>如果您的客户端没有连接到testnet：</p>
                              <ul>
                                  <li>检查网络连接。</li>
                                  <li>确保您使用的是最新版本的客户端。 拉取最新的Libra Core并重新运行客户端：
                                      <ul>
                                          <li><code>./scripts/cli/start_cli_testnet.sh</code></li>
                                      </ul>
                                  </li>
                              </ul>
                              <h3><a class="anchor" aria-hidden="true" id="铸币添加到账户"></a><a href="#铸币添加到账户"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>铸币添加到账户</h3>
                              <ul>
                                  <li>
                                      <p>如果您在testnet上连接的验证程序节点不可用，您将收到“服务器不可用”消息，如下所示：</p>
                                      <pre><code class="hljs css language-plaintext">libra% account mint 0 110
&gt;&gt; Minting coins
[ERROR] Error minting coins: Server unavailable, please retry and/or check **if** host passed to the client is running
</code></pre>
                                  </li>
                                  <li>
                                      <p>如果您在提交交易后未更新余额，请稍等片刻再次查询余额。 如果区块链上大量交易在提交，那么可能会有延迟。 如果您的余额仍未更新，请再次尝试铸币。
                                      </p>
                                  </li>
                                  <li>
                                      <p>要检查帐户是否存在，请查询帐户状态。 对于索引为0的帐户，请输入以下内容：</p>
                                      <p><code>libra% query account_state 0</code></p>
                                  </li>
                              </ul>
                              <h3><a class="anchor" aria-hidden="true" id="转账命令"></a><a href="#转账命令"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>转账命令</h3>
                              <p>如果testnet验证器节点不可用（而客户端已确定连接上了）或与 testnet 网络的连接超时，您将看到此错误：</p>
                              <pre><code class="hljs css language-plaintext">libra% transfer 0 1 10
&gt;&gt; Transferring
[ERROR] Failed to perform transaction: Server unavailable, please retry and/or check if host passed to the client is running
</code></pre>
                              <p>解决交易故障:</p>
                              <ul>
                                  <li>检查testnet的连接。</li>
                                  <li>查询发件人帐户以确保其确实存在。 对索引为0的帐户使用以下命令：
                                      <ul>
                                          <li><code>query account_state 0</code></li>
                                      </ul>
                                  </li>
                                  <li>使用<code>quit</code> 或 <code>q!</code>退出, 然后重新运行以下命令以连接到testnet：
                                      <ul>
                                          <li>从libre目录运行 <code>./scripts/cli/start_cli_testnet.sh</code></li>
                                      </ul>
                                  </li>
                              </ul>
                              <h2><a class="anchor" aria-hidden="true" id="查询命令输出示例"></a><a href="#查询命令输出示例"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>查询命令输出示例</h2>
                              <h3><a class="anchor" aria-hidden="true" id="通过账号和序号查询交易"></a><a href="#通过账号和序号查询交易"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>通过账号和序号查询交易</h3>
                              <p>此示例将使用帐户和序列号查询单个交易的详细信息。</p>
                              <pre><code class="hljs css language-plaintext">libra% query txn_acc_seq 0 0 true
&gt;&gt; Getting committed transaction by account and sequence number
Committed transaction: SignedTransaction {
{ raw_txn: RawTransaction {
  sender: 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8,
  sequence_number: 0,
  payload: {,
    transaction: peer_to_peer_transaction,
    args: [
      {ADDRESS: 8337aac709a41fe6be03cad8878a0d4209740b1608f8a81566c9a7d4b95a2ec7},
      {U64: 10000000},
    ]
  },
  max_gas_amount: 10000,
  gas_unit_price: 0,
  expiration_time: 1560466424s,
},
public_key: 55af3fe3f28550a2f1e5ebf073ef193feda44344d94c463b48be202aa0b3255d,
signature: Signature( R: CompressedEdwardsY: [210, 23, 214, 62, 228, 179, 64, 147, 81, 159, 180, 138, 100, 211, 111, 139, 178, 148, 81, 1, 240, 135, 148, 145, 104, 234, 227, 239, 198, 153, 13, 199], s: Scalar{
bytes: [203, 76, 105, 49, 64, 130, 162, 81, 22, 237, 159, 26, 80, 181, 111, 94, 84, 6, 152, 126, 181, 192, 62, 103, 130, 94, 246, 174, 139, 214, 3, 15],
} ),
}
}
Events:
ContractEvent { access_path: AccessPath { address: 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8, type: Resource, hash: "217da6c6b3e19f1825cfb2676daecce3bf3de03cf26647c78df00b371b25cc97", suffix: "/sent_events_count/" } , index: 0, event_data: AccountEvent { account: 8337aac709a41fe6be03cad8878a0d4209740b1608f8a81566c9a7d4b95a2ec7, amount: 10000000 } }
ContractEvent { access_path: AccessPath { address: 8337aac709a41fe6be03cad8878a0d4209740b1608f8a81566c9a7d4b95a2ec7, type: Resource, hash: "217da6c6b3e19f1825cfb2676daecce3bf3de03cf26647c78df00b371b25cc97", suffix: "/received_events_count/" } , index: 0, event_data: AccountEvent { account: 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8, amount: 10000000 } }
</code></pre>
                              <p>请注意，交易金额以 microlibra 单位显示.</p>
                              <h3><a class="anchor" aria-hidden="true" id="事件查询"></a><a href="#事件查询"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>事件查询</h3>
                              <p>在以下示例中，我们将从索引为0的帐户查询“已发送”事件。我们从此帐户发送了一个交易，所以只有一个交易。
                                  当前状态的证明同样会返回。以便确保没有丢失任何交易的延展可以进行 - 这在查询不返回“有限”事件时完成。</p>
                              <pre><code class="hljs css language-plaintext">libra% query event 0 sent 0 true 10
&gt;&gt; Getting events by account and event type.
EventWithProof {
transaction_version: 3,
event_index: 0,
event: ContractEvent { access_path: AccessPath { address: e7460e02058b36d28e8eef03f0834c605d3d6c57455b8ec9c3f0a3c8b89f248b, type: Resource, hash: "217da6c6b3e19f1825cfb2676daecce3bf3de03cf26647c78df00b371b25cc97", suffix: "/sent_events_count/" } , index: 0, event_data: AccountEvent { account: 46efbad798a739c088e0e98dd9d592c27c7eb45ba1f8ccbdfc00bd4d7f2947f3, amount: 10000000 } },
proof: EventProof { ledger_info_to_transaction_info_proof: AccumulatorProof { siblings: [HashValue(62570ae9a994bcb20c03c055667a4966fa50d0f17867dd5819465072fd2c58ba), HashValue(cce2cf325714511e7d04fa5b48babacd5af943198e6c1ac3bdd39c53c87cb84c)] }, transaction_info: TransactionInfo { signed_transaction_hash: HashValue(69bed01473e0a64140d96e46f594bc4b463e88e244b694e962b7e19fde17f30d), state_root_hash: HashValue(5809605d5eed94c73e57f615190c165b11c5e26873012285cc6b131e0817c430), event_root_hash: HashValue(645df3dee8f53a0d018449392b8e9da814d258da7346cf64cd96824f914e68f9), gas_used: 0 }, transaction_info_to_event_proof: AccumulatorProof { siblings: [HashValue(5d0e2ebf0952f0989cb5b38b2a9b52a09e8d804e893cb99bf9fa2c74ab304bb1)] } }
}
Last event state: Some(
  AccountStateWithProof {
      version: 3,
      blob: Some(
          AccountStateBlob {
           Raw: 0x010000002100000001217da6c6b3e19f1825cfb2676daecce3bf3de03cf26647c78df00b371b25cc974400000020000000e7460e02058b36d28e8eef03f0834c605d3d6c57455b8ec9c3f0a3c8b89f248b00e1f50500000000000000000000000001000000000000000100000000000000
           Decoded: Ok(
              AccountResource {
                  balance: 100000000,
                  sequence_number: 1,
                  authentication_key: 0xe7460e02058b36d28e8eef03f0834c605d3d6c57455b8ec9c3f0a3c8b89f248b,
                  sent_events_count: 1,
                  received_events_count: 0,
              },
          )
           },
      ),
      proof: AccountStateProof {
          ledger_info_to_transaction_info_proof: AccumulatorProof {
              siblings: [
                  HashValue(62570ae9a994bcb20c03c055667a4966fa50d0f17867dd5819465072fd2c58ba),
                  HashValue(cce2cf325714511e7d04fa5b48babacd5af943198e6c1ac3bdd39c53c87cb84c),
              ],
          },
          transaction_info: TransactionInfo {
              signed_transaction_hash: HashValue(69bed01473e0a64140d96e46f594bc4b463e88e244b694e962b7e19fde17f30d),
              state_root_hash: HashValue(5809605d5eed94c73e57f615190c165b11c5e26873012285cc6b131e0817c430),
              event_root_hash: HashValue(645df3dee8f53a0d018449392b8e9da814d258da7346cf64cd96824f914e68f9),
              gas_used: 0,
          },
          transaction_info_to_account_proof: SparseMerkleProof {
              leaf: Some(
                  (
                      HashValue(c0fbd63b0ae4abfe57c8f24f912f164ba0537741e948a65f00d3fae0f9373981),
                      HashValue(fc45057fd64606c7ca40256b48fbe486660930bfef1a9e941cafcae380c25871),
                  ),
              ),
              siblings: [
                  HashValue(4136803b3ba779bb2c1daae7360f3f839e6fef16ae742590a6698b350a5fc376),
                  HashValue(5350415253455f4d45524b4c455f504c414345484f4c4445525f484153480000),
                  HashValue(a9a6bda22dd6ee78ddd3a42da152b9bd39797b7da738e9d6023f407741810378),
              ],
          },
      },
  },
)
</code></pre>
                              <h3><a class="anchor" aria-hidden="true" id="查询账户状态"></a><a href="#查询账户状态"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>查询账户状态</h3>
                              <p>在此示例中，我们将查询单个帐户的状态。</p>
                              <pre><code class="hljs css language-plaintext">libra% query account_state 0
&gt;&gt; Getting latest account state
Latest account state is:
Account: 3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8
State: Some(
  AccountStateBlob {
   Raw: 0x010000002100000001217da6c6b3e19f1825cfb2676daecce3bf3de03cf26647c78df00b371b25cc9744000000200000003ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a800e1f50500000000000000000000000001000000000000000100000000000000
   Decoded: Ok(
      AccountResource {
          balance: 100000000,
          sequence_number: 1,
          authentication_key: 0x3ed8e5fafae4147b2a105a0be2f81972883441cfaaadf93fc0868e7a0253c4a8,
          sent_events_count: 1,
          received_events_count: 0,
      },
  )
   },
)
Blockchain Version: 3
</code></pre>
                              <h2><a class="anchor" aria-hidden="true" id="运行本地验证器节点"></a><a href="#运行本地验证器节点"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>运行本地验证器节点</h2>
                              <p>要在本地计算机上启动验证程序节点，并创建本地区块链网络（未连接到Libra testnet），请确保您已经按照<a
                                      href="#安装-libra-core">安装Libra Core</a>, 切换到Libra Core库的根目录，然后运行
                                  <code>libra_swarm</code> 如下显示:</p>
                              <pre><code class="hljs css language-bash">$ <span class="hljs-built_in">cd</span> ~/libra
$ cargo run -p libra_swarm -- -s
</code></pre>
                              <p><code>-p libra_swarm</code> - 使用cargo运行libra_swarm包，该包启动由一个节点组成的本地区块链。</p>
                              <p><code>-s</code> 启动本地客户端以连接到本地区块链。</p>
                              <p>要查看启动节点和连接Libra区块链的其他选项，请运行：</p>
                              <p><code>$ cargo run -p libra_swarm -- -h</code></p>
                              <p>Cargo命令可能需要一些时间才能执行完成。 如果此命令的执行完成且没有错误，则系统上将运行Libra CLI客户端实例和Libra验证器节点。 应该能看到包含
                                  CLI 客你户端菜单和<code>libra%</code> 提示符的输出.</p>
                              <h2><a class="anchor" aria-hidden="true" id="交易生命周期"></a><a href="#交易生命周期"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>交易生命周期</h2>
                              <p>执行完第一笔交易后，您可以参考该文件 <a href="life-of-a-transaction.htm">交易生命周期</a>:
                              </p>
                              <ul>
                                  <li>从“底层”说明交易从提交到执行的整个生命周期</li>
                                  <li>在Libra生态系统中提交和执行交易时，了解Libra验证器的每个逻辑组件之间的交互。</li>
                              </ul>
                              <h2><a class="anchor" aria-hidden="true" id="参考"></a><a href="#参考"
                                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon"
                                          aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                                          width="16">
                                          <path fill-rule="evenodd"
                                              d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                                          </path>
                                      </svg></a>参考</h2>
                              <ul>
                                  <li><a href="welcome-to-libra.htm">来到 Libra 世界</a>.</li>
                                  <li><a href="libra-protocol.htm">Libra 协议核心概念</a> — 介绍Libra 协议的核心概念
                                  </li>
                                  <li><a href="my-first-transaction.htm">Libra上的第一笔交易</a> — 指导使用Libra
                                      CLI客户端在Libra区块链上执行第一笔交易。</li>
                                  <li><a href="move-overview.htm">Move概述</a> — 介绍新区块链编程语言Move。
                                  </li>
                                  <li><a href="libra-core-overview.htm">Libra Core 概要</a> — Libra
                                      Core 组件的概念和实现细节。</li>
                                  <li><a href="libra-cli.htm">CLI 命令指南</a> — 列出Libra
                                      CLI客户端的命令及其用法。</li>
                                  <li><a href="glossary.htm">Libra 术语表</a> —
                                      提供Libra术语的快速参考。</li>
                              </ul>
                          </span></div>
                  </article>
              </div>
              <div class="docs-prevnext"><a class="docs-prev button"
                      href="state-machine-replication-paper.htm"><span class="arrow-prev">←
                      </span><span>Libra区块链中状态机的复制</span></a><a class="docs-next button"
                      href="move-overview.htm"><span>Move概述</span><span class="arrow-next">
                          →</span></a></div>
          </div>
      </div>
      <nav class="onPageNav">
          <ul class="toc-headings">
              <li><a href="#约定假设条件">约定假设条件</a></li>
              <li><a href="#提交交易的步骤">提交交易的步骤</a></li>
              <li><a href="#克隆并编译-libra-core">克隆并编译 Libra Core</a>
                  <ul class="toc-headings">
                      <li><a href="#克隆-libra-core库">克隆 Libra Core库</a></li>
                      <li><a href="#安装-libra-core">安装 Libra Core</a></li>
                  </ul>
              </li>
              <li><a href="#编译-libra-cli-客户端并连接到testnet">编译 Libra Cli 客户端并连接到testnet</a></li>
              <li><a href="#创建alice和bob的账户">创建Alice和Bob的账户</a>
                  <ul class="toc-headings">
                      <li><a href="#步骤1-检查cli客户端是否在系统上运行">步骤1：检查CLI客户端是否在系统上运行</a></li>
                      <li><a href="#步骤2-创建alice账户">步骤2：创建Alice账户</a></li>
                      <li><a href="#步骤3-创建bob的账户">步骤3: 创建Bob的账户</a></li>
                      <li><a href="#步骤4-可选-账户列表">步骤4 (可选): 账户列表</a></li>
                  </ul>
              </li>
              <li><a href="#添加libra-币到alice和bob账户">添加Libra 币到Alice和Bob账户</a>
                  <ul class="toc-headings">
                      <li><a href="#步骤1-添加110个libra到alice账户">步骤1: 添加110个Libra到Alice账户</a></li>
                      <li><a href="#步骤2-添加52个libra币到bob账户">步骤2: 添加52个Libra币到Bob账户</a></li>
                      <li><a href="#步骤3-余额检查">步骤3: 余额检查</a></li>
                  </ul>
              </li>
              <li><a href="#提交交易">提交交易</a>
                  <ul class="toc-headings">
                      <li><a href="#查询账户的序列号">查询账户的序列号</a></li>
                      <li><a href="#转账">转账</a></li>
                      <li><a href="#查询交易后序列号">查询交易后序列号</a></li>
                      <li><a href="#检查交易后两个账户的余额">检查交易后两个账户的余额</a></li>
                      <li><a href="#恭喜">恭喜!</a></li>
                  </ul>
              </li>
              <li><a href="#故障排除">故障排除</a>
                  <ul class="toc-headings">
                      <li><a href="#安装">安装</a></li>
                      <li><a href="#客户端编译运行">客户端编译运行</a></li>
                      <li><a href="#铸币添加到账户">铸币添加到账户</a></li>
                      <li><a href="#转账命令">转账命令</a></li>
                  </ul>
              </li>
              <li><a href="#查询命令输出示例">查询命令输出示例</a>
                  <ul class="toc-headings">
                      <li><a href="#通过账号和序号查询交易">通过账号和序号查询交易</a></li>
                      <li><a href="#事件查询">事件查询</a></li>
                      <li><a href="#查询账户状态">查询账户状态</a></li>
                  </ul>
              </li>
              <li><a href="#运行本地验证器节点">运行本地验证器节点</a></li>
              <li><a href="#交易生命周期">交易生命周期</a></li>
              <li><a href="#参考">参考</a></li>
          </ul>
      </nav>
    </div>
    <footer class="nav-footer" id="footer">
            <section class="sitemap"><a href="https://developers.libra.org/" class="nav-home"><img
                  src="libra-logomark-white.png" alt="Libra" /></a>
              <div class="footerSection">
                <h5>Learn About Libra</h5><a href="welcome-to-libra.htm">Welcome to Libra</a><a
                  href="libra-protocol.htm">Libra Protocol</a><a href="the-libra-blockchain-paper.htm">Libra Blockchain</a><a
                  href="life-of-a-transaction.htm">Life of a Transaction</a>
                <p></p>
                <h5>Try Libra Core </h5><a href="my-first-transaction.htm">My First Transaction</a><a
                  href="move-overview.htm">Getting Started With Move</a>
              </div>
              <div class="footerSection">
                <h5>Policies</h5><a href="privacy-policy.htm">Privacy Policy</a><a href="terms-of-use.htm">Terms of Use</a><a
                  href="cookies-policy.htm">Cookies Policy</a><a href="code-of-conduct.htm">Code of Conduct</a>
                <p></p>
                <h5>Community</h5><a href="https://community.libra.org/">Developer Forum</a><a
                  href="https://developers.libra.org/newsletter_form">Newsletter</a>
              </div>
              <div class="footerSection">
                <h5>Libra开发者社区</h5>
                <img style="width:150px" src='qr_violas.png'>
                <h5>备注”Libra“加群<h5>
              </div>
            </section>
            <section class="copyright"> © Violas Association</section>
          </footer>
  </div>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js"></script>
  <script>
    document.addEventListener('keyup', function (e) {
      if (e.target !== document.body) {
        return;
      }
      // keyCode for '/' (slash)
      if (e.keyCode === 191) {
        const search = document.getElementById('search_input_react');
        search && search.focus();
      }
    });
  </script>
  <script>
    var search = docsearch({

      apiKey: '0d48ee629d39ddc4916eeef7755a0c4c',
      indexName: 'libra',
      inputSelector: '#search_input_react'
    });
  </script>
</body>

</html>