<!DOCTYPE html>
<html lang="en">

<head>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <title>Network · Libra</title>
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content="Docusaurus" />
  <meta name="description" content="The network component provides peer-to-peer communication primitives to other" />
  <meta name="docsearch:language" content="en" />
  <meta property="og:title" content="Network · Libra" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://developers.libra.org/" />
  <meta property="og:description"
    content="The network component provides peer-to-peer communication primitives to other" />
  <meta property="og:image" content="https://developers.libra.org/img/libra.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:image" content="https://developers.libra.org/img/libra.png" />
  <link rel="shortcut icon" href="libra.ico" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css" />
  <link rel="alternate" type="application/atom+xml" href="atom.xml" title="Libra Blog ATOM Feed" />
  <link rel="alternate" type="application/rss+xml" href="feed.xml" title="Libra Blog RSS Feed" />
  <script type="text/javascript" src="buttons.js"></script>
  <script type="text/javascript" src="code_block_buttons.js"></script>
  <script type="text/javascript" src="cookie_banner.js"></script>
  <script type="text/javascript" src="disable_adblock.js"></script>
  <script type="text/javascript" src="segment.analytics.min.js"></script>
  <script type="text/javascript" src="segment.js"></script>
  <script type="text/javascript" src="clipboardjs.2.0.0.min.js"></script>
  <script type="text/javascript" src="forms.js"></script>
  <script src="scrollSpy.js"></script>
  <link rel="stylesheet" href="main.css" />
  <script src="codetabs.js"></script>
</head>

<body class="sideNavVisible separateOnPageNav">
  <div class="fixedHeaderContainer">
    <div class="headerWrapper wrapper">
      <header><a href="https://developers.libra.org/"><img class="logo" src="libra-nav-logo.png" alt="Libra" />
          <h2 class="headerTitleWithLogo">Libra</h2>
        </a>
        <div class="navigationWrapper navigationSlider">
          <nav class="slidingNav">
            <ul class="nav-site nav-site-internal">
                <li class=""><a href="https://violas.io/">主页</a></li>
                <li class="siteNavGroupActive siteNavItemActive"><a href="welcome-to-libra.htm" target="_self">文档</a></li>
                <li class=""><a href="https://community.libra.org" target="_self">Libra 社区</a></li>
                <li class=""><a href="blog_2.html" target="_self">Libra Blog</a></li>
                <li class=""><a href="https://libra.org" target="_self">Libra 官网</a></li>
                <li class=""><a href="https://github.com/libra/libra" target="_self">Libra GitHub</a></li>
                <li class=""><a href="../lib_doc_en/network.htm" target="_self">中/EN</a></li>
              <li class="navSearchWrapper reactNavSearchWrapper"><input type="text" id="search_input_react"
                  placeholder="Search" title="Search" /></li>
            </ul>
          </nav>
        </div>
      </header>
    </div>
  </div>
  <div class="navPusher">
    <div class="docMainWrapper wrapper">
      <div class="docsNavContainer" id="docsNav">
        <nav class="toc">
          <div class="toggleNav">
            <section class="navWrapper wrapper">
              <div class="navBreadcrumb wrapper">
                <div class="navToggle" id="navToggler">
                  <div class="hamburger-menu">
                    <div class="line1"></div>
                    <div class="line2"></div>
                    <div class="line3"></div>
                  </div>
                </div>
                <h2><i>›</i><span>学习 Libra</span></h2>
                <div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div>
              </div>
              <div class="navGroups">
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习 Libra</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="welcome-to-libra.htm">欢迎</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="libra-protocol.htm">Libra 协议: 核心概念</a></li>
                    <li class="navListItem"><a class="navItem" href="life-of-a-transaction.htm">交易的生命周期</a></li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">技术论文</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="the-libra-blockchain-paper.htm">Libra 区块链</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="move-paper.htm">Move: 一种可编程资源的语言</a></li>
                        <li class="navListItem"><a class="navItem"
                            href="state-machine-replication-paper.htm">Libra区块链中状态机的复制</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">学习Libra核心</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="my-first-transaction.htm">我的第一笔交易</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="move-overview.htm">Move概述</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="run-local-network.htm">在本地网络上运行</a></li>
                    <li class="navListItem"><a class="navItem" href="run-move-locally.htm">本地运行Move程序</a>
                    </li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">社区</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-open-source-paper.htm">Libra开源</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="contributing.htm">贡献指南</a></li>
                    <li class="navListItem"><a class="navItem" href="coding-guidelines.htm">代码指南</a></li>
                    <li class="navListItem"><a class="navItem" href="security.htm">报告漏洞</a></li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Libra 协议实现</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-core-overview.htm">Libra Core概述</a>
                    </li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">READMEs</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="admission-control.htm">准入控制 admission
                            control</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="bytecode-verifier.htm">字节码验证器 Bytecode
                            Verifier</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="consensus.htm">共识组件 Consensus</a></li>
                        <li class="navListItem"><a class="navItem" href="crypto.htm">加密组件 Crypto</a></li>
                        <li class="navListItem"><a class="navItem" href="execution.htm">执行组件 Execution</a></li>
                        <li class="navListItem"><a class="navItem" href="mempool.htm">内存池 Mempool</a></li>
                        <li class="navListItem"><a class="navItem" href="ir-to-bytecode.htm">Move IR 编译器</a></li>
                        <li class="navListItem"><a class="navItem" href="move-language.htm">Move 语言</a></li>
                        <li class="navListItem navListItemActive"><a class="navItem" href="network.htm">网络组件 Network</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="storage.htm">存储组件 Storage</a></li>
                        <li class="navListItem"><a class="navItem" href="vm.htm">虚拟机 Virtual Machine</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">参考引用</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-cli.htm">Libra命令行工具</a></li>
                    <li class="navListItem"><a class="navItem" href="glossary.htm">词汇表</a></li>
                  </ul>
                </div>
              </div>
            </section>
          </div>
          <script>
            var coll = document.getElementsByClassName('collapsible');
            var checkActiveCategory = true;
            for (var i = 0; i < coll.length; i++) {
              var links = coll[i].nextElementSibling.getElementsByTagName('*');
              if (checkActiveCategory) {
                for (var j = 0; j < links.length; j++) {
                  if (links[j].classList.contains('navListItemActive')) {
                    coll[i].nextElementSibling.classList.toggle('hide');
                    coll[i].childNodes[1].classList.toggle('rotate');
                    checkActiveCategory = false;
                    break;
                  }
                }
              }

              coll[i].addEventListener('click', function () {
                var arrow = this.childNodes[1];
                arrow.classList.toggle('rotate');
                var content = this.nextElementSibling;
                content.classList.toggle('hide');
              });
            }

            document.addEventListener('DOMContentLoaded', function () {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              var headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function (event) {
                var el = event.target;
                while (el !== headings) {
                  if (el.tagName === 'A') {
                    document.body.classList.remove('tocActive');
                    break;
                  } else {
                    el = el.parentNode;
                  }
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function (event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
          </script>
        </nav>
      </div>
      <div class="container mainContainer">
        <div class="wrapper">
          <div class="post">
            <header class="postHeader"><a class="edit-page-link button"
                href="https://github.com/libra/libra/edit/master/network/README.md" target="_blank"
                rel="noreferrer noopener">编辑</a>
              <h1 class="postHeaderTitle">网络 </h1>
            </header>
            <article>
              <div><span>
                  <p>网络组件向验证器的其他组件提供点对点网络服务。</p>
                  <h2><a class="anchor" aria-hidden="true" id="overview"></a><a href="network.htm#overview"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>概要</h2>
                  <p>网络组件是专门为促进共识和共享内存池协议而设计的。目前，它为这些组件提供了两个主要接口:</p>
                  <ul>
                    <li>RPC, 用于远程过程调用;</li>
                    <li>DirectSend, 用于向单个接收方发送“即发即忘”样式的消息。</li>
                  </ul>
                  <p>网络组件使用：</p>
                  <ul>
                    <li><a href="https://multiformats.io/multiaddr/">Multiaddr</a>用于对等寻址的方案。</li>
                    <li>TCP：用于可靠传输。</li>
                    <li><a href="https://noiseprotocol.org/noise.html">Noise</a> 用于身份验证和点对点加密。</li>
                    <li><a href="https://github.com/hashicorp/yamux/blob/master/spec.md">Yamux</a> 在单个链接上多路复用子流（substreams）。</li>
                    <li>推送类型的 <a href="https://en.wikipedia.org/wiki/Gossip_protocol">gossip</a>：用于对节点发现。</li>
                  </ul>
                  <p>每个新的子流（substream）都被分配了一个由发送方和接收方都支持的<em>协议</em>。每个RPC和DirectSend类型都对应一个这样的协议。</p>
                  <p>只有符合条件的成员才允许加入内部验证器网络。它们的标识和公钥信息由共识组件在初始化和更新系统成员时提供。 一个新的验证器还需要一些<em>种子</em> 节点的网络地址，以帮助它启动连接到网络的链接。种子对等节点首先进行验证器的身份验证，然后与之共享网络状态。.</p>
                  <p>网络中的每个成员都维护一个合法全员视图，并直接连接到需要与之通信的任何验证器。不能直接连接的验证器被假定为属于系统所能容忍的拜占庭式故障的范围。</p>
                  <p>定期使用活动探测器来确定的验证者的状态，信息不在验证器之间共享; 相反，每个验证器直接监视其对等节点的活动状态。</p>
                  <p>在完成部分资格成员视图，复杂的故障检测器或网络覆盖之前，此方法应扩展到几百个验证器。</p>
                  <h2><a class="anchor" aria-hidden="true" id="implementation-details"></a><a
                      href="network.htm#implementation-details" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>实施细节</h2>
                  <h3><a class="anchor" aria-hidden="true" id="system-architecture"></a><a
                      href="network.htm#system-architecture" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>实施细节</h3>
                  <pre><code class="hljs">                             +---------------------+---------------------+
                             |      Consensus      |       Mempool       |
                             +---------------------+---------------------+
                             |            Validator Network              |
                             +---------------------+---------------------+
                             |            NetworkProvider                |
+------------------------------------------------+-----------------+     |
| Discovery, health, etc     |            RPC    |  DirectSend     |     |
+--------------+---------------------------------------------------------+
|                                         Peer Manager                   |
+------------------------------------------------------------------+-----+
</code></pre>
                  <p>网络组件用
                    <a href="https://en.wikipedia.org/wiki/Actor_model">Actor</a>  编程模型中实现 — 即，它在不同子组件（组件作为独立“任务”运行）之间使用消息传递进行通信。 The <a href="https://tokio.rs/">tokio</a>框架用作任务运行时（task runtime）。网络组件中的不同子组件为:</p>
                  <ul>
                    <li><strong>NetworkProvider</strong> — 向客户端公开网络API。 它将来自上游客户端的请求转发到适当的下游组件，并将传入的RPC和DirectSend请求发送到适当的上游处理程序。</li>
                    <li><strong>Peer Manager</strong> — L侦听入链接及主动连接网络上的其他对等节点。 它还通知其他组件有关新/丢失的连接事件，并将传入的子流解复用到适当的协议处理程序。</li>
                    <li><strong>连接管理器（Connectivity Manager）</strong> — 当且仅当它是符合条件的网络成员时，才能确保我们保持与节点的连接。 Connectivity Manager从Discovery组件接收对等方的地址，并向 Peer Manager 发出拨号/断开连接请求。</li>
                    <li><strong>Discovery</strong> — 使用推送式来发现新的节点并更新现有节点的地址。 在每个tick上，它打开一个随机选择的节点的新子流，并将其网络视图发送给该节点。 从入链发现消息中检测到的对网络的任何更改都会通知连接管理器。</li>
                    <li><strong>Health Checker</strong> —  执行定期活动探测以确保对等/连接的健康状况。如果一系列可配置的探测相继失败，它将重置与对等节点的连接。用户探测当前在可配置的静态超时上失败。</li>
                    <li><strong>Direct Send</strong> — 允许向/从远程对等节点发送/接收消息。它将入链消息通知上游处理程序。</li>
                    <li><strong>RPC</strong> — 允许向/从其他对等节点发送/接收RPC。 它通知上游处理程序有关入链RPC的信息。 上游处理程序通过一个通道可以向调用者发送序列化响应。 除了上述子组件之外，网络组件还包括用于执行加密，传输复用，协议协商等的实用程序。</li>
                  </ul>
                  <p>除了上述子组件之外，网络组件还包括用于执行加密，传输多路复用，协议协商等的实用程序。</p>
                  <h2><a class="anchor" aria-hidden="true" id="how-is-this-module-organized"></a><a
                      href="network.htm#how-is-this-module-organized" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>模块组织结构？</h2>
                  <pre><code class="hljs">network
├── benches                       # network benchmarks
├── memsocket                     # In-memory transport for tests
├── netcore
│   └── src
│       ├── multiplexing          # substream multiplexing over a transport
│       ├── negotiate             # protocol negotiation
│       └── transport             # composable transport API
├── noise                         # noise framework for authentication and encryption
└── src
    ├── channel                    # mpsc channel wrapped in IntGauge
    ├── connectivity_manager       # component to ensure connectivity to peers
    ├── interface                  # generic network API
    ├── peer_manager               # component to dial/listen for connections
    ├── proto                      # protobuf definitions for network messages
    ├── protocols                  # message protocols
    │   ├── direct_send            # protocol for fire-and-forget style message delivery
    │   ├── discovery              # protocol for peer discovery and gossip
    │   ├── health_checker         # protocol for health probing
    │   └── rpc                    # protocol for remote procedure calls
    ├── sink                       # utilities over message sinks
    └── validator_network          # network API for consensus and mempool
</code></pre>
                </span></div>
            </article>
          </div>
          <div class="docs-prevnext"><a class="docs-prev button" href="move-language.htm"><span class="arrow-prev">←
              </span><span>MOVE 编程语言</span></a><a class="docs-next button"
              href="storage.htm"><span>存储模块 STORAGE</span><span class="arrow-next"> →</span></a></div>
        </div>
      </div>
      <nav class="onPageNav">
        <ul class="toc-headings">
          <li><a href="network.htm#overview">概要</a></li>
          <li><a href="network.htm#implementation-details">实施细节</a>
            <ul class="toc-headings">
              <li><a href="network.htm#system-architecture">系统架构</a></li>
            </ul>
          </li>
          <li><a href="network.htm#how-is-this-module-organized">模块组织结构？</a></li>
        </ul>
      </nav>
    </div>
    <footer class="nav-footer" id="footer">
        <section class="sitemap"><a href="https://developers.libra.org/" class="nav-home"><img
              src="libra-logomark-white.png" alt="Libra" /></a>
          <div class="footerSection">
            <h5>Learn About Libra</h5><a href="welcome-to-libra.htm">Welcome to Libra</a><a
              href="libra-protocol.htm">Libra Protocol</a><a href="the-libra-blockchain-paper.htm">Libra Blockchain</a><a
              href="life-of-a-transaction.htm">Life of a Transaction</a>
            <p></p>
            <h5>Try Libra Core </h5><a href="my-first-transaction.htm">My First Transaction</a><a
              href="move-overview.htm">Getting Started With Move</a>
          </div>
          <div class="footerSection">
            <h5>Policies</h5><a href="privacy-policy.htm">Privacy Policy</a><a href="terms-of-use.htm">Terms of Use</a><a
              href="cookies-policy.htm">Cookies Policy</a><a href="code-of-conduct.htm">Code of Conduct</a>
            <p></p>
            <h5>Community</h5><a href="https://community.libra.org/">Developer Forum</a><a
              href="https://developers.libra.org/newsletter_form">Newsletter</a>
          </div>
          <div class="footerSection">
            <h5>Libra开发者社区</h5>
            <img style="width:150px" src='qr_violas.png'>
            <h5>备注”Libra“加群<h5>
          </div>
        </section>
        <section class="copyright"> © Violas Association</section>
      </footer>
  </div>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js"></script>
  <script>
    document.addEventListener('keyup', function (e) {
      if (e.target !== document.body) {
        return;
      }
      // keyCode for '/' (slash)
      if (e.keyCode === 191) {
        const search = document.getElementById('search_input_react');
        search && search.focus();
      }
    });
  </script>
  <script>
    var search = docsearch({

      apiKey: '0d48ee629d39ddc4916eeef7755a0c4c',
      indexName: 'libra',
      inputSelector: '#search_input_react'
    });
  </script>
</body>

</html>