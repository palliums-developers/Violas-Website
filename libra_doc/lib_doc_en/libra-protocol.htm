<!DOCTYPE html>
<html lang="en">

<head>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <title>Libra Protocol: Key Concepts · Libra</title>
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content="Docusaurus" />
  <meta name="description"
    content="The Libra Blockchain is a cryptographically authenticated distributed database, and it is based on the Libra protocol. This document briefly describes the key concepts of the Libra protocol. For a detailed description of all the elements of the Libra protocol, refer to the [Libra Blockchain technical paper](https://libra.org/en-us/whitepaper)." />
  <meta name="docsearch:language" content="en" />
  <meta property="og:title" content="Libra Protocol: Key Concepts · Libra" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://developers.libra.org/" />
  <meta property="og:description"
    content="The Libra Blockchain is a cryptographically authenticated distributed database, and it is based on the Libra protocol. This document briefly describes the key concepts of the Libra protocol. For a detailed description of all the elements of the Libra protocol, refer to the [Libra Blockchain technical paper](https://libra.org/en-us/whitepaper)." />
  <meta property="og:image" content="https://developers.libra.org/img/libra.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:image" content="https://developers.libra.org/img/libra.png" />
  <link rel="shortcut icon" href="libra.ico" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css" />
  <link rel="alternate" type="application/atom+xml" href="atom.xml" title="Libra Blog ATOM Feed" />
  <link rel="alternate" type="application/rss+xml" href="feed.xml" title="Libra Blog RSS Feed" />
  <script type="text/javascript" src="buttons.js"></script>
  <script type="text/javascript" src="code_block_buttons.js"></script>
  <script type="text/javascript" src="cookie_banner.js"></script>
  <script type="text/javascript" src="disable_adblock.js"></script>
  <script type="text/javascript" src="segment.analytics.min.js"></script>
  <script type="text/javascript" src="segment.js"></script>
  <script type="text/javascript" src="clipboardjs.2.0.0.min.js"></script>
  <script type="text/javascript" src="forms.js"></script>
  <script src="scrollSpy.js"></script>
  <link rel="stylesheet" href="main.css" />
  <script src="codetabs.js"></script>
</head>

<body class="sideNavVisible separateOnPageNav">
  <div class="fixedHeaderContainer">
    <div class="headerWrapper wrapper">
      <header><a href="https://developers.libra.org/"><img class="logo" src="libra-nav-logo.png" alt="Libra" />
          <h2 class="headerTitleWithLogo">Libra</h2>
        </a>
        <div class="navigationWrapper navigationSlider">
          <nav class="slidingNav">
            <ul class="nav-site nav-site-internal">
              <li class=""><a href="https://violas.io/">Home</a></li>
              <li class="siteNavGroupActive"><a href="welcome-to-libra.htm" target="_self">Documentation</a></li>
              <li class=""><a href="https://community.libra.org" target="_self">Community</a></li>
              <li class=""><a href="blog_2.html" target="_self">Blog</a></li>
              <li class=""><a href="https://libra.org" target="_self">libra.org</a></li>
              <li class=""><a href="https://github.com/libra/libra" target="_self">GitHub</a></li>
              <li class=""><a href="../lib_doc_en2cn/libra-protocol.htm">中/EN</a></li>
              <li class="navSearchWrapper reactNavSearchWrapper"><input type="text" id="search_input_react"
                  placeholder="Search" title="Search" /></li>
            </ul>
          </nav>
        </div>
      </header>
    </div>
  </div>
  <div class="navPusher">
    <div class="docMainWrapper wrapper">
      <div class="docsNavContainer" id="docsNav">
        <nav class="toc">
          <div class="toggleNav">
            <section class="navWrapper wrapper">
              <div class="navBreadcrumb wrapper">
                <div class="navToggle" id="navToggler">
                  <div class="hamburger-menu">
                    <div class="line1"></div>
                    <div class="line2"></div>
                    <div class="line3"></div>
                  </div>
                </div>
                <h2><i>›</i><span>Learn About Libra</span></h2>
                <div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div>
              </div>
              <div class="navGroups">
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Learn About Libra</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="welcome-to-libra.htm">Welcome</a></li>
                    <li class="navListItem navListItemActive"><a class="navItem" href="libra-protocol.htm">Libra
                        Protocol: Key Concepts</a></li>
                    <li class="navListItem"><a class="navItem" href="life-of-a-transaction.htm">Life of a
                        Transaction</a></li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">Technical Papers</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="the-libra-blockchain-paper.htm">The Libra
                            Blockchain</a></li>
                        <li class="navListItem"><a class="navItem" href="move-paper.htm">Move: A Language With
                            Programmable Resources</a></li>
                        <li class="navListItem"><a class="navItem" href="state-machine-replication-paper.htm">State
                            Machine Replication in the Libra Blockchain</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Try Libra Core</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="my-first-transaction.htm">My First Transaction</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="move-overview.htm">Getting Started With Move</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="run-local-network.htm">Run a Local Network</a></li>
                    <li class="navListItem"><a class="navItem" href="run-move-locally.htm">Run Move Programs Locally</a>
                    </li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Community</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-open-source-paper.htm">Libra Open Source</a>
                    </li>
                    <li class="navListItem"><a class="navItem" href="contributing.htm">Contribution Guide</a></li>
                    <li class="navListItem"><a class="navItem" href="coding-guidelines.htm">Coding Guidelines</a></li>
                    <li class="navListItem"><a class="navItem" href="security.htm">Reporting Vulnerabilities</a></li>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Libra Codebase</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-core-overview.htm">Libra Core Overview</a>
                    </li>
                    <div class="navGroup subNavGroup">
                      <h4 class="navGroupSubcategoryTitle">READMEs</h4>
                      <ul>
                        <li class="navListItem"><a class="navItem" href="admission-control.htm">Admission Control</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="bytecode-verifier.htm">Bytecode Verifier</a>
                        </li>
                        <li class="navListItem"><a class="navItem" href="consensus.htm">Consensus</a></li>
                        <li class="navListItem"><a class="navItem" href="crypto.htm">Crypto</a></li>
                        <li class="navListItem"><a class="navItem" href="execution.htm">Execution</a></li>
                        <li class="navListItem"><a class="navItem" href="mempool.htm">Mempool</a></li>
                        <li class="navListItem"><a class="navItem" href="ir-to-bytecode.htm">Move IR Compiler</a></li>
                        <li class="navListItem"><a class="navItem" href="move-language.htm">Move Language</a></li>
                        <li class="navListItem"><a class="navItem" href="network.htm">Network</a></li>
                        <li class="navListItem"><a class="navItem" href="storage.htm">Storage</a></li>
                        <li class="navListItem"><a class="navItem" href="vm.htm">Virtual Machine</a></li>
                      </ul>
                    </div>
                  </ul>
                </div>
                <div class="navGroup">
                  <h3 class="navGroupCategoryTitle">Reference</h3>
                  <ul class="">
                    <li class="navListItem"><a class="navItem" href="libra-cli.htm">Libra CLI</a></li>
                    <li class="navListItem"><a class="navItem" href="glossary.htm">Glossary</a></li>
                  </ul>
                </div>
              </div>
            </section>
          </div>
          <script>
            var coll = document.getElementsByClassName('collapsible');
            var checkActiveCategory = true;
            for (var i = 0; i < coll.length; i++) {
              var links = coll[i].nextElementSibling.getElementsByTagName('*');
              if (checkActiveCategory) {
                for (var j = 0; j < links.length; j++) {
                  if (links[j].classList.contains('navListItemActive')) {
                    coll[i].nextElementSibling.classList.toggle('hide');
                    coll[i].childNodes[1].classList.toggle('rotate');
                    checkActiveCategory = false;
                    break;
                  }
                }
              }

              coll[i].addEventListener('click', function () {
                var arrow = this.childNodes[1];
                arrow.classList.toggle('rotate');
                var content = this.nextElementSibling;
                content.classList.toggle('hide');
              });
            }

            document.addEventListener('DOMContentLoaded', function () {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              var headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function (event) {
                var el = event.target;
                while (el !== headings) {
                  if (el.tagName === 'A') {
                    document.body.classList.remove('tocActive');
                    break;
                  } else {
                    el = el.parentNode;
                  }
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function (event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
          </script>
        </nav>
      </div>
      <div class="container mainContainer">
        <div class="wrapper">
          <div class="post">
            <header class="postHeader"><a class="edit-page-link button"
                href="https://github.com/libra/website/edit/master/docs/libra-protocol.md" target="_blank"
                rel="noreferrer noopener">Edit</a>
              <h1 class="postHeaderTitle">Libra Protocol: Key Concepts</h1>
            </header>
            <article>
              <div><span>
                  <p>The Libra Blockchain is a cryptographically authenticated distributed database, and it is based on
                    the Libra protocol. This document briefly describes the key concepts of the Libra protocol. For a
                    detailed description of all the elements of the Libra protocol, refer to the <a
                      href="https://libra.org/en-us/whitepaper">Libra Blockchain technical paper</a>.</p>
                  <p>The Libra Blockchain is maintained by a distributed network of <a
                      href="glossary.htm#validator-node">validator nodes</a>, also known as validators. The validators
                    collectively follow a <a href="glossary.htm#consensus-protocol">consensus protocol</a> to agree on
                    an ordering of transactions in the blockchain.</p>
                  <p>The Libra testnet is a demonstration of an early prototype of the Libra Blockchain software — Libra
                    Core.</p>
                  <h2><a class="anchor" aria-hidden="true" id="transactions-and-states"></a><a
                      href="libra-protocol.htm#transactions-and-states" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Transactions and States</h2>
                  <p>At the heart of the Libra protocol are two fundamental concepts — transactions and states. At any
                    point in time, the blockchain has a “state.” The state (or ledger state) represents the current
                    snapshot of data on the chain. Executing a transaction changes the state of the blockchain.</p>
                  <p><img src="transactions.svg" alt="Figure 1.1 A transaction changes state.">
                    <small class="figure">Figure 1.1 Transactions change state.</small></p>
                  <p>Figure 1.1 represents the change of state of the Libra Blockchain that occurs when a transaction is
                    executed. For example, at state S<sub>N-1</sub>, Alice has a balance of 110 LBR, and Bob has a
                    balance of 52 LBR. When a transaction is applied to the blockchain, it generates a new state. To
                    transition from S<sub>N-1</sub> to S<sub>N</sub>, transaction T<sub>N</sub> is applied against the
                    state S<sub>N-1</sub>. This causes Alice’s balance to be reduced by 10 LBR and Bob’s balance to be
                    increased by 10 LBR. The new state S<sub>N</sub> now shows these updated balances. In figure 1.1:
                  </p>
                  <ul>
                    <li><strong>A</strong> and <strong>B</strong> represent Alice’s and Bob’s accounts in the
                      blockchain.</li>
                    <li><strong>S<sub>N-1</sub></strong> represents the (N-1)<sup>th</sup> state of the blockchain.</li>
                    <li><strong>T<sub>N</sub></strong> is the n-th transaction executed on the blockchain.
                      <ul>
                        <li>In this example, T<sub>N</sub> is - “send 10 LBR from person A’s account to person B’s
                          account.”</li>
                      </ul>
                    </li>
                    <li><strong>F</strong> is a deterministic function. F always returns the same final state for a
                      specific initial state and a specific transaction. If the current state of the blockchain is
                      S<sub>N-1</sub>, and transaction T<sub>N</sub> is executed on state S<sub>N-1</sub>, the new state
                      of the blockchain is always S<sub>N</sub>.</li>
                    <li><strong>S<sub>N</sub></strong> is the n-th state of the blockchain. S<sub>N</sub> is an outcome
                      of applying F to S<sub>N-1</sub> and T<sub>N</sub>.</li>
                  </ul>
                  <p>The Libra protocol uses the <a href="move-overview.htm">Move language</a> to implement the
                    deterministic execution function F.</p>
                  <h3><a class="anchor" aria-hidden="true" id="transactions"></a><a
                      href="libra-protocol.htm#transactions" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Transactions</h3>
                  <p>Clients of the Libra Blockchain submit transactions to request updates to the ledger state. A
                    signed transaction on the blockchain contains:</p>
                  <ul>
                    <li><strong>Sender address</strong> — Account address of the sender of the transaction.</li>
                    <li><strong>Sender public key</strong> — The public key that corresponds to the private key used to
                      sign the transaction.</li>
                    <li><strong>Program</strong> — The program is comprised of the following:
                      <ul>
                        <li>A Move bytecode transaction script.</li>
                        <li>An optional list of inputs to the script. For a peer-to-peer transaction, the inputs contain
                          the information about the recipient and the amount transferred to the recipient.</li>
                        <li>An optional list of Move bytecode modules to publish.</li>
                      </ul>
                    </li>
                    <li><strong>Gas price</strong> (in microlibra/gas units) — The amount the sender is willing to pay
                      per unit of <a href="glossary.htm#gas">gas</a> to execute the transaction. Gas is a way to pay for
                      computation and storage. A gas unit is an abstract measurement of computation with no inherent
                      real-world value.</li>
                    <li><strong>Maximum gas amount</strong> — The maximum units of gas the transaction is allowed to
                      consume.</li>
                    <li><strong>Sequence number</strong> — An unsigned integer that must be equal to the sequence number
                      stored under the sender’s account.</li>
                    <li><strong>Expiration time</strong> — The time after which the transaction ceases to be valid.</li>
                    <li><strong>Signature</strong> — The digital signature of the sender.</li>
                  </ul>
                  <p>The transaction script is an arbitrary program that encodes the logic of a transaction and
                    interacts with resources published in the distributed database of the Libra Blockchain.</p>
                  <h3><a class="anchor" aria-hidden="true" id="ledger-state"></a><a
                      href="libra-protocol.htm#ledger-state" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Ledger State</h3>
                  <p>The ledger state, or global state of the Libra Blockchain, is comprised of the state of all
                    accounts in the blockchain. To execute transactions, each validator must know the global state of
                    the latest version of the blockchain's distributed database. See <a
                      href="libra-protocol.htm#versioned-database">versioned database</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="versioned-database"></a><a
                      href="libra-protocol.htm#versioned-database" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Versioned Database</h2>
                  <p>All of the data in the Libra Blockchain is persisted in a single-versioned distributed database. A
                    version number is an unsigned 64-bit integer that corresponds to the number of transactions the
                    system has executed.</p>
                  <p>The versioned database allows validators to:</p>
                  <ul>
                    <li>Execute a transaction against the ledger state at the latest version.</li>
                    <li>Respond to client queries about ledger history at both current and previous versions.</li>
                  </ul>
                  <h2><a class="anchor" aria-hidden="true" id="account"></a><a href="libra-protocol.htm#account"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Account</h2>
                  <p>A Libra account is a container for Move modules and Move resources. It is identified by an <a
                      href="glossary.htm#account-address">account address</a>. This essentially means that the state of
                    each account is comprised of both code and data:</p>
                  <ul>
                    <li><strong><a href="move-overview.htm#move-modules-allow-composable-smart-contracts">Move
                          modules</a></strong> contain code (type and procedure declarations), but they do not contain
                      data. The procedures of a module encode the rules for updating the global state of the blockchain.
                    </li>
                    <li><strong><a href="move-overview.htm#move-has-first-class-resources">Move resources</a></strong>
                      contain data but no code. Every resource value has a type that is declared in a module published
                      in the distributed database of the blockchain.</li>
                  </ul>
                  <p>An account may contain an arbitrary number of Move resources and Move modules.</p>
                  <h4><a class="anchor" aria-hidden="true" id="account-address"></a><a
                      href="libra-protocol.htm#account-address" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Account Address</h4>
                  <p>The address of a Libra account is a 256-bit value. Users can claim addresses using digital
                    signatures. The account address is a cryptographic hash of a user’s public verification key. To sign
                    a transaction sent from their account address, the user (or the custodial client representing the
                    user) must use the private key corresponding to that account.</p>
                  <p>There is no limit on the number of addresses a Libra user can claim. To claim an account address, a
                    transaction should be sent from an account that holds sufficient Libra to pay the account creation
                    fee.</p>
                  <h2><a class="anchor" aria-hidden="true" id="proof"></a><a href="libra-protocol.htm#proof"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Proof</h2>
                  <p>All of the data in the Libra Blockchain is stored in a single-versioned distributed database. The
                    storage is used to persist agreed upon blocks of transactions and their execution results. The
                    blockchain is represented as an ever-growing <a href="glossary.htm#merkle-trees">Merkle tree of
                      transactions</a>. A “leaf” is appended to the tree for each transaction executed on the
                    blockchain.</p>
                  <ul>
                    <li>A proof is a way to verify the truth of data in the Libra Blockchain.</li>
                    <li>Every operation stored on the blockchain can be verified cryptographically, and the resultant
                      proof also proves that no data has been omitted. For example, if the client queried the latest
                      <em>n</em> transactions from an account, the proof verifies that no transactions are omitted from
                      the query response.</li>
                  </ul>
                  <p>In a blockchain, the client does not need to trust the entity from which it is receiving data. A
                    client could query for the balance of an account, ask whether a specific transaction was processed,
                    and so on. As with other Merkle trees, the ledger history can provide an <span class="katex"><span
                        class="katex-mathml"><math>
                          <semantics>
                            <mrow>
                              <mi>O</mi>
                              <mo>(</mo>
                              <mi>log</mi>
                              <mi>n</mi>
                              <mo>)</mo>
                            </mrow>
                            <annotation encoding="application/x-tex">O(\log n)</annotation>
                          </semantics>
                        </math></span><span class="katex-html" aria-hidden="true"><span class="strut"
                          style="height:0.75em;"></span><span class="strut bottom"
                          style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span
                            class="mord mathit" style="margin-right:0.02778em;">O</span><span
                            class="mopen">(</span><span class="mop">lo<span
                              style="margin-right:0.01389em;">g</span></span><span class="mord mathit">n</span><span
                            class="mclose">)</span></span></span></span>-sized proof of a specific transaction object,
                    where <em>n</em> is the total number of transactions processed.</p>
                  <h2><a class="anchor" aria-hidden="true" id="validator-node-validator"></a><a
                      href="libra-protocol.htm#validator-node-validator" aria-hidden="true" class="hash-link"><svg
                        class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16"
                        width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Validator Node (Validator)</h2>
                  <p>Clients of the Libra Blockchain create transactions and submit them to a validator node. A
                    validator node runs a consensus protocol (together with other validator nodes), executes the
                    transactions, and stores the transactions and the execution results in the blockchain. Validator
                    nodes decide which transactions will be added to the blockchain and in which order.
                    <img src="validator.svg" alt="Figure 1.1 Logical components of a validator.">
                    <small class="figure">Figure 1.2 Logical components of a validator.</small></p>
                  <p>A validator node contains the following logical components:</p>
                  <p><strong>Admission Control (AC)</strong></p>
                  <ul>
                    <li>Admission Control is the sole external interface of the validator node. Any request made by a
                      client to the validator node goes to AC first.</li>
                    <li>AC performs initial checks on the requests to protect the other parts of the validator node from
                      corrupt or high volume input.</li>
                  </ul>
                  <p><strong>Mempool</strong></p>
                  <ul>
                    <li>Mempool is a buffer that holds the transactions that are “waiting” to be executed.</li>
                    <li>When a new transaction is added to a validator node’s mempool, this validator node’s mempool
                      shares this transaction with the mempools of other validators in the system.</li>
                  </ul>
                  <p><strong>Consensus</strong></p>
                  <ul>
                    <li>The consensus component is responsible for ordering blocks of transactions and agreeing on the
                      results of execution by participating in the <a href="glossary.htm#consensus">consensus
                        protocol</a> with other validator nodes in the network.</li>
                  </ul>
                  <p><strong>Execution</strong></p>
                  <ul>
                    <li>The execution component utilizes the virtual machine (VM) to execute transactions.</li>
                    <li>Execution’s job is to coordinate the execution of a block of transactions and maintain a
                      transient state that can be voted upon by consensus.</li>
                    <li>Execution maintains an in-memory representation of the results of execution until consensus
                      commits the block to the distributed database.</li>
                  </ul>
                  <p><strong>Virtual Machine (VM)</strong></p>
                  <ul>
                    <li>AC and Mempool use the VM component to perform validation checks on transactions.</li>
                    <li>VM is used to run the program included in a transaction and determine the results.</li>
                  </ul>
                  <p><strong>Storage</strong></p>
                  <p>The storage is used to persist agreed upon blocks of transactions and their execution results.</p>
                  <p>For information on interactions of each validator component with other components, refer to <a
                      href="life-of-a-transaction.htm">Life of a Transaction</a>.</p>
                  <h2><a class="anchor" aria-hidden="true" id="reference"></a><a href="libra-protocol.htm#reference"
                      aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16"
                        version="1.1" viewBox="0 0 16 16" width="16">
                        <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                        </path>
                      </svg></a>Reference</h2>
                  <ul>
                    <li><a href="welcome-to-libra.htm">Welcome Page</a>.</li>
                    <li><a href="my-first-transaction.htm">My First Transaction</a> — Guides you through executing your
                      very first transaction on the Libra Blockchain using the Libra CLI client.</li>
                    <li><a href="move-overview.htm">Getting Started with Move</a> — Introduces you to a new blockchain
                      programming language called Move.</li>
                    <li><a href="life-of-a-transaction.htm">Life of a Transaction</a> — Provides a look at what happens
                      “under the hood” when a transaction is submitted and executed.</li>
                    <li><a href="libra-core-overview.htm">Libra Core Overview</a> — Provides the concept and
                      implementation details of the Libra Core components through READMEs.</li>
                    <li><a href="libra-cli.htm">CLI Guide</a> — Lists the commands (and their usage) of the Libra CLI
                      client.</li>
                    <li><a href="glossary.htm">Libra Glossary</a> — Provides a quick reference to Libra terminology.
                    </li>
                  </ul>
                </span></div>
            </article>
          </div>
          <div class="docs-prevnext"><a class="docs-prev button" href="welcome-to-libra.htm"><span class="arrow-prev">←
              </span><span>Welcome</span></a><a class="docs-next button" href="life-of-a-transaction.htm"><span>Life of
                a Transaction</span><span class="arrow-next"> →</span></a></div>
        </div>
      </div>
      <nav class="onPageNav">
        <ul class="toc-headings">
          <li><a href="libra-protocol.htm#transactions-and-states">Transactions and States</a>
            <ul class="toc-headings">
              <li><a href="libra-protocol.htm#transactions">Transactions</a></li>
              <li><a href="libra-protocol.htm#ledger-state">Ledger State</a></li>
            </ul>
          </li>
          <li><a href="libra-protocol.htm#versioned-database">Versioned Database</a></li>
          <li><a href="libra-protocol.htm#account">Account</a></li>
          <li><a href="libra-protocol.htm#proof">Proof</a></li>
          <li><a href="libra-protocol.htm#validator-node-validator">Validator Node (Validator)</a></li>
          <li><a href="libra-protocol.htm#reference">Reference</a></li>
        </ul>
      </nav>
    </div>
    <footer class="nav-footer" id="footer">
        <section class="sitemap"><a href="https://developers.libra.org/" class="nav-home"><img
              src="libra-logomark-white.png" alt="Libra" /></a>
          <div class="footerSection">
            <h5>Learn About Libra</h5><a href="welcome-to-libra.htm">Welcome to Libra</a><a
              href="libra-protocol.htm">Libra Protocol</a><a href="the-libra-blockchain-paper.htm">Libra Blockchain</a><a
              href="life-of-a-transaction.htm">Life of a Transaction</a>
            <p></p>
            <h5>Try Libra Core </h5><a href="my-first-transaction.htm">My First Transaction</a><a
              href="move-overview.htm">Getting Started With Move</a>
          </div>
          <div class="footerSection">
            <h5>Policies</h5><a href="privacy-policy.htm">Privacy Policy</a><a href="terms-of-use.htm">Terms of Use</a><a
              href="cookies-policy.htm">Cookies Policy</a><a href="code-of-conduct.htm">Code of Conduct</a>
            <p></p>
            <h5>Community</h5><a href="https://community.libra.org/">Developer Forum</a><a
              href="https://developers.libra.org/newsletter_form">Newsletter</a>
          </div>
          <div class="footerSection">
            <h5>Libra Developer Community</h5>
            <img style="width:300px" src='qr_violas.png'>
            <h5>Join us with scan and enter libra<h5>
          </div>
        </section>
        <section class="copyright"> © Violas Association</section>
      </footer>
  </div>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js"></script>
  <script>
    document.addEventListener('keyup', function (e) {
      if (e.target !== document.body) {
        return;
      }
      // keyCode for '/' (slash)
      if (e.keyCode === 191) {
        const search = document.getElementById('search_input_react');
        search && search.focus();
      }
    });
  </script>
  <script>
    var search = docsearch({

      apiKey: '0d48ee629d39ddc4916eeef7755a0c4c',
      indexName: 'libra',
      inputSelector: '#search_input_react'
    });
  </script>
</body>

</html>